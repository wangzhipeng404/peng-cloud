"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkonline_conplier"] = self["webpackChunkonline_conplier"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_swift_swift_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js":
/*!**************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": function() { return /* binding */ conf; },\n/* harmony export */   \"language\": function() { return /* binding */ language; }\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.0(9d278685b078158491964f8fd7ac9628fffa0f30)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/swift/swift.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".swift\",\n  identifier: /[a-zA-Z_][\\w$]*/,\n  attributes: [\"@GKInspectable\", \"@IBAction\", \"@IBDesignable\", \"@IBInspectable\", \"@IBOutlet\", \"@IBSegueAction\", \"@NSApplicationMain\", \"@NSCopying\", \"@NSManaged\", \"@Sendable\", \"@UIApplicationMain\", \"@autoclosure\", \"@actorIndependent\", \"@asyncHandler\", \"@available\", \"@convention\", \"@derivative\", \"@differentiable\", \"@discardableResult\", \"@dynamicCallable\", \"@dynamicMemberLookup\", \"@escaping\", \"@frozen\", \"@globalActor\", \"@inlinable\", \"@inline\", \"@main\", \"@noDerivative\", \"@nonobjc\", \"@noreturn\", \"@objc\", \"@objcMembers\", \"@preconcurrency\", \"@propertyWrapper\", \"@requires_stored_property_inits\", \"@resultBuilder\", \"@testable\", \"@unchecked\", \"@unknown\", \"@usableFromInline\", \"@warn_unqualified_access\"],\n  accessmodifiers: [\"open\", \"public\", \"internal\", \"fileprivate\", \"private\"],\n  keywords: [\"#available\", \"#colorLiteral\", \"#column\", \"#dsohandle\", \"#else\", \"#elseif\", \"#endif\", \"#error\", \"#file\", \"#fileID\", \"#fileLiteral\", \"#filePath\", \"#function\", \"#if\", \"#imageLiteral\", \"#keyPath\", \"#line\", \"#selector\", \"#sourceLocation\", \"#warning\", \"Any\", \"Protocol\", \"Self\", \"Type\", \"actor\", \"as\", \"assignment\", \"associatedtype\", \"associativity\", \"async\", \"await\", \"break\", \"case\", \"catch\", \"class\", \"continue\", \"convenience\", \"default\", \"defer\", \"deinit\", \"didSet\", \"do\", \"dynamic\", \"dynamicType\", \"else\", \"enum\", \"extension\", \"fallthrough\", \"false\", \"fileprivate\", \"final\", \"for\", \"func\", \"get\", \"guard\", \"higherThan\", \"if\", \"import\", \"in\", \"indirect\", \"infix\", \"init\", \"inout\", \"internal\", \"is\", \"isolated\", \"lazy\", \"left\", \"let\", \"lowerThan\", \"mutating\", \"nil\", \"none\", \"nonisolated\", \"nonmutating\", \"open\", \"operator\", \"optional\", \"override\", \"postfix\", \"precedence\", \"precedencegroup\", \"prefix\", \"private\", \"protocol\", \"public\", \"repeat\", \"required\", \"rethrows\", \"return\", \"right\", \"safe\", \"self\", \"set\", \"some\", \"static\", \"struct\", \"subscript\", \"super\", \"switch\", \"throw\", \"throws\", \"true\", \"try\", \"typealias\", \"unowned\", \"unsafe\", \"var\", \"weak\", \"where\", \"while\", \"willSet\", \"__consuming\", \"__owned\"],\n  symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\n  operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\n  operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\n  operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [{\n      include: \"@whitespace\"\n    }, {\n      include: \"@comment\"\n    }, {\n      include: \"@attribute\"\n    }, {\n      include: \"@literal\"\n    }, {\n      include: \"@keyword\"\n    }, {\n      include: \"@invokedmethod\"\n    }, {\n      include: \"@symbol\"\n    }],\n    whitespace: [[/\\s+/, \"white\"], [/\"\"\"/, \"string.quote\", \"@endDblDocString\"]],\n    endDblDocString: [[/[^\"]+/, \"string\"], [/\\\\\"/, \"string\"], [/\"\"\"/, \"string.quote\", \"@popall\"], [/\"/, \"string\"]],\n    symbol: [[/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/[.]/, \"delimiter\"], [/@operators/, \"operator\"], [/@symbols/, \"operator\"]],\n    comment: [[/\\/\\/\\/.*$/, \"comment.doc\"], [/\\/\\*\\*/, \"comment.doc\", \"@commentdocbody\"], [/\\/\\/.*$/, \"comment\"], [/\\/\\*/, \"comment\", \"@commentbody\"]],\n    commentdocbody: [[/\\/\\*/, \"comment\", \"@commentbody\"], [/\\*\\//, \"comment.doc\", \"@pop\"], [/\\:[a-zA-Z]+\\:/, \"comment.doc.param\"], [/./, \"comment.doc\"]],\n    commentbody: [[/\\/\\*/, \"comment\", \"@commentbody\"], [/\\*\\//, \"comment\", \"@pop\"], [/./, \"comment\"]],\n    attribute: [[/@@@identifier/, {\n      cases: {\n        \"@attributes\": \"keyword.control\",\n        \"@default\": \"\"\n      }\n    }]],\n    literal: [[/\"/, {\n      token: \"string.quote\",\n      next: \"@stringlit\"\n    }], [/0[b]([01]_?)+/, \"number.binary\"], [/0[o]([0-7]_?)+/, \"number.octal\"], [/0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/, \"number.hex\"], [/(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/, \"number.float\"], [/(\\d_?)+/, \"number\"]],\n    stringlit: [[/\\\\\\(/, {\n      token: \"operator\",\n      next: \"@interpolatedexpression\"\n    }], [/@escapes/, \"string\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, {\n      token: \"string.quote\",\n      next: \"@pop\"\n    }], [/./, \"string\"]],\n    interpolatedexpression: [[/\\(/, {\n      token: \"operator\",\n      next: \"@interpolatedexpression\"\n    }], [/\\)/, {\n      token: \"operator\",\n      next: \"@pop\"\n    }], {\n      include: \"@literal\"\n    }, {\n      include: \"@keyword\"\n    }, {\n      include: \"@symbol\"\n    }],\n    keyword: [[/`/, {\n      token: \"operator\",\n      next: \"@escapedkeyword\"\n    }], [/@identifier/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"[A-Z][a-zA-Z0-9$]*\": \"type.identifier\",\n        \"@default\": \"identifier\"\n      }\n    }]],\n    escapedkeyword: [[/`/, {\n      token: \"operator\",\n      next: \"@pop\"\n    }], [/./, \"identifier\"]],\n    invokedmethod: [[/([.])(@identifier)/, {\n      cases: {\n        $2: [\"delimeter\", \"type.identifier\"],\n        \"@default\": \"\"\n      }\n    }]]\n  }\n};\n\n/*!---------------------------------------------------------------------------------------------\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\n *--------------------------------------------------------------------------------------------*/\n\n//# sourceURL=webpack://online-conplier/./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js?");

/***/ })

}]);