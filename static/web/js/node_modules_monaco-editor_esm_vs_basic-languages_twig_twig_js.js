"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkonline_conplier"] = self["webpackChunkonline_conplier"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_twig_twig_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.js":
/*!************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": function() { return /* binding */ conf; },\n/* harmony export */   \"language\": function() { return /* binding */ language; }\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.0(9d278685b078158491964f8fd7ac9628fffa0f30)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/twig/twig.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: [\"{#\", \"#}\"]\n  },\n  brackets: [[\"{#\", \"#}\"], [\"{%\", \"%}\"], [\"{{\", \"}}\"], [\"(\", \")\"], [\"[\", \"]\"], [\"<!--\", \"-->\"], [\"<\", \">\"]],\n  autoClosingPairs: [{\n    open: \"{# \",\n    close: \" #}\"\n  }, {\n    open: \"{% \",\n    close: \" %}\"\n  }, {\n    open: \"{{ \",\n    close: \" }}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \"\",\n  ignoreCase: true,\n  keywords: [\"apply\", \"autoescape\", \"block\", \"deprecated\", \"do\", \"embed\", \"extends\", \"flush\", \"for\", \"from\", \"if\", \"import\", \"include\", \"macro\", \"sandbox\", \"set\", \"use\", \"verbatim\", \"with\", \"endapply\", \"endautoescape\", \"endblock\", \"endembed\", \"endfor\", \"endif\", \"endmacro\", \"endsandbox\", \"endset\", \"endwith\", \"true\", \"false\"],\n  tokenizer: {\n    root: [[/\\s+/], [/{#/, \"comment.twig\", \"@commentState\"], [/{%[-~]?/, \"delimiter.twig\", \"@blockState\"], [/{{[-~]?/, \"delimiter.twig\", \"@variableState\"], [/<!DOCTYPE/, \"metatag.html\", \"@doctype\"], [/<!--/, \"comment.html\", \"@comment\"], [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, [\"delimiter.html\", \"tag.html\", \"\", \"delimiter.html\"]], [/(<)(script)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@script\"\n    }]], [/(<)(style)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@style\"\n    }]], [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@otherTag\"\n    }]], [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@otherTag\"\n    }]], [/</, \"delimiter.html\"], [/[^<]+/]],\n    commentState: [[/#}/, \"comment.twig\", \"@pop\"], [/./, \"comment.twig\"]],\n    blockState: [[/[-~]?%}/, \"delimiter.twig\", \"@pop\"], [/\\s+/], [/(verbatim)(\\s*)([-~]?%})/, [\"keyword.twig\", \"\", {\n      token: \"delimiter.twig\",\n      next: \"@rawDataState\"\n    }]], {\n      include: \"expression\"\n    }],\n    rawDataState: [[/({%[-~]?)(\\s*)(endverbatim)(\\s*)([-~]?%})/, [\"delimiter.twig\", \"\", \"keyword.twig\", \"\", {\n      token: \"delimiter.twig\",\n      next: \"@popall\"\n    }]], [/./, \"string.twig\"]],\n    variableState: [[/[-~]?}}/, \"delimiter.twig\", \"@pop\"], {\n      include: \"expression\"\n    }],\n    stringState: [[/\"/, \"string.twig\", \"@pop\"], [/#{\\s*/, \"string.twig\", \"@interpolationState\"], [/[^#\"\\\\]*(?:(?:\\\\.|#(?!\\{))[^#\"\\\\]*)*/, \"string.twig\"]],\n    interpolationState: [[/}/, \"string.twig\", \"@pop\"], {\n      include: \"expression\"\n    }],\n    expression: [[/\\s+/], [/\\+|-|\\/{1,2}|%|\\*{1,2}/, \"operators.twig\"], [/(and|or|not|b-and|b-xor|b-or)(\\s+)/, [\"operators.twig\", \"\"]], [/==|!=|<|>|>=|<=/, \"operators.twig\"], [/(starts with|ends with|matches)(\\s+)/, [\"operators.twig\", \"\"]], [/(in)(\\s+)/, [\"operators.twig\", \"\"]], [/(is)(\\s+)/, [\"operators.twig\", \"\"]], [/\\||~|:|\\.{1,2}|\\?{1,2}/, \"operators.twig\"], [/[^\\W\\d][\\w]*/, {\n      cases: {\n        \"@keywords\": \"keyword.twig\",\n        \"@default\": \"variable.twig\"\n      }\n    }], [/\\d+(\\.\\d+)?/, \"number.twig\"], [/\\(|\\)|\\[|\\]|{|}|,/, \"delimiter.twig\"], [/\"([^#\"\\\\]*(?:\\\\.[^#\"\\\\]*)*)\"|\\'([^\\'\\\\]*(?:\\\\.[^\\'\\\\]*)*)\\'/, \"string.twig\"], [/\"/, \"string.twig\", \"@stringState\"], [/=>/, \"operators.twig\"], [/=/, \"operators.twig\"]],\n    doctype: [[/[^>]+/, \"metatag.content.html\"], [/>/, \"metatag.html\", \"@pop\"]],\n    comment: [[/-->/, \"comment.html\", \"@pop\"], [/[^-]+/, \"comment.content.html\"], [/./, \"comment.content.html\"]],\n    otherTag: [[/\\/?>/, \"delimiter.html\", \"@pop\"], [/\"([^\"]*)\"/, \"attribute.value.html\"], [/'([^']*)'/, \"attribute.value.html\"], [/[\\w\\-]+/, \"attribute.name.html\"], [/=/, \"delimiter.html\"], [/[ \\t\\r\\n]+/]],\n    script: [[/type/, \"attribute.name.html\", \"@scriptAfterType\"], [/\"([^\"]*)\"/, \"attribute.value.html\"], [/'([^']*)'/, \"attribute.value.html\"], [/[\\w\\-]+/, \"attribute.name.html\"], [/=/, \"delimiter.html\"], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@scriptEmbedded\",\n      nextEmbedded: \"text/javascript\"\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(script\\s*)(>)/, [\"delimiter.html\", \"tag.html\", {\n      token: \"delimiter.html\",\n      next: \"@pop\"\n    }]]],\n    scriptAfterType: [[/=/, \"delimiter.html\", \"@scriptAfterTypeEquals\"], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@scriptEmbedded\",\n      nextEmbedded: \"text/javascript\"\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    scriptAfterTypeEquals: [[/\"([^\"]*)\"/, {\n      token: \"attribute.value.html\",\n      switchTo: \"@scriptWithCustomType.$1\"\n    }], [/'([^']*)'/, {\n      token: \"attribute.value.html\",\n      switchTo: \"@scriptWithCustomType.$1\"\n    }], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@scriptEmbedded\",\n      nextEmbedded: \"text/javascript\"\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    scriptWithCustomType: [[/>/, {\n      token: \"delimiter.html\",\n      next: \"@scriptEmbedded.$S2\",\n      nextEmbedded: \"$S2\"\n    }], [/\"([^\"]*)\"/, \"attribute.value.html\"], [/'([^']*)'/, \"attribute.value.html\"], [/[\\w\\-]+/, \"attribute.name.html\"], [/=/, \"delimiter.html\"], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    scriptEmbedded: [[/<\\/script/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/[^<]+/, \"\"]],\n    style: [[/type/, \"attribute.name.html\", \"@styleAfterType\"], [/\"([^\"]*)\"/, \"attribute.value.html\"], [/'([^']*)'/, \"attribute.value.html\"], [/[\\w\\-]+/, \"attribute.name.html\"], [/=/, \"delimiter.html\"], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@styleEmbedded\",\n      nextEmbedded: \"text/css\"\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(style\\s*)(>)/, [\"delimiter.html\", \"tag.html\", {\n      token: \"delimiter.html\",\n      next: \"@pop\"\n    }]]],\n    styleAfterType: [[/=/, \"delimiter.html\", \"@styleAfterTypeEquals\"], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@styleEmbedded\",\n      nextEmbedded: \"text/css\"\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    styleAfterTypeEquals: [[/\"([^\"]*)\"/, {\n      token: \"attribute.value.html\",\n      switchTo: \"@styleWithCustomType.$1\"\n    }], [/'([^']*)'/, {\n      token: \"attribute.value.html\",\n      switchTo: \"@styleWithCustomType.$1\"\n    }], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@styleEmbedded\",\n      nextEmbedded: \"text/css\"\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    styleWithCustomType: [[/>/, {\n      token: \"delimiter.html\",\n      next: \"@styleEmbedded.$S2\",\n      nextEmbedded: \"$S2\"\n    }], [/\"([^\"]*)\"/, \"attribute.value.html\"], [/'([^']*)'/, \"attribute.value.html\"], [/[\\w\\-]+/, \"attribute.name.html\"], [/=/, \"delimiter.html\"], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    styleEmbedded: [[/<\\/style/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/[^<]+/, \"\"]]\n  }\n};\n\n\n//# sourceURL=webpack://online-conplier/./node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.js?");

/***/ })

}]);