"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkonline_conplier"] = self["webpackChunkonline_conplier"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_liquid_liquid_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.js":
/*!****************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": function() { return /* binding */ conf; },\n/* harmony export */   \"language\": function() { return /* binding */ language; }\n/* harmony export */ });\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../editor/editor.api.js */ \"./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.0(9d278685b078158491964f8fd7ac9628fffa0f30)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n\n  return to;\n};\n\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\")); // src/fillers/monaco-editor-core.ts\n\n\nvar monaco_editor_core_exports = {};\n\n__reExport(monaco_editor_core_exports, _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\n\n // src/basic-languages/liquid/liquid.ts\n\nvar EMPTY_ELEMENTS = [\"area\", \"base\", \"br\", \"col\", \"embed\", \"hr\", \"img\", \"input\", \"keygen\", \"link\", \"menuitem\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"];\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  brackets: [[\"<!--\", \"-->\"], [\"<\", \">\"], [\"{{\", \"}}\"], [\"{%\", \"%}\"], [\"{\", \"}\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"%\",\n    close: \"%\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  onEnterRules: [{\n    beforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n    afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n    }\n  }, {\n    beforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\n    }\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \"\",\n  builtinTags: [\"if\", \"else\", \"elseif\", \"endif\", \"render\", \"assign\", \"capture\", \"endcapture\", \"case\", \"endcase\", \"comment\", \"endcomment\", \"cycle\", \"decrement\", \"for\", \"endfor\", \"include\", \"increment\", \"layout\", \"raw\", \"endraw\", \"render\", \"tablerow\", \"endtablerow\", \"unless\", \"endunless\"],\n  builtinFilters: [\"abs\", \"append\", \"at_least\", \"at_most\", \"capitalize\", \"ceil\", \"compact\", \"date\", \"default\", \"divided_by\", \"downcase\", \"escape\", \"escape_once\", \"first\", \"floor\", \"join\", \"json\", \"last\", \"lstrip\", \"map\", \"minus\", \"modulo\", \"newline_to_br\", \"plus\", \"prepend\", \"remove\", \"remove_first\", \"replace\", \"replace_first\", \"reverse\", \"round\", \"rstrip\", \"size\", \"slice\", \"sort\", \"sort_natural\", \"split\", \"strip\", \"strip_html\", \"strip_newlines\", \"times\", \"truncate\", \"truncatewords\", \"uniq\", \"upcase\", \"url_decode\", \"url_encode\", \"where\"],\n  constants: [\"true\", \"false\"],\n  operators: [\"==\", \"!=\", \">\", \"<\", \">=\", \"<=\"],\n  symbol: /[=><!]+/,\n  identifier: /[a-zA-Z_][\\w]*/,\n  tokenizer: {\n    root: [[/\\{\\%\\s*comment\\s*\\%\\}/, \"comment.start.liquid\", \"@comment\"], [/\\{\\{/, {\n      token: \"@rematch\",\n      switchTo: \"@liquidState.root\"\n    }], [/\\{\\%/, {\n      token: \"@rematch\",\n      switchTo: \"@liquidState.root\"\n    }], [/(<)([\\w\\-]+)(\\/>)/, [\"delimiter.html\", \"tag.html\", \"delimiter.html\"]], [/(<)([:\\w]+)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@otherTag\"\n    }]], [/(<\\/)([\\w\\-]+)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@otherTag\"\n    }]], [/</, \"delimiter.html\"], [/\\{/, \"delimiter.html\"], [/[^<{]+/]],\n    comment: [[/\\{\\%\\s*endcomment\\s*\\%\\}/, \"comment.end.liquid\", \"@pop\"], [/./, \"comment.content.liquid\"]],\n    otherTag: [[/\\{\\{/, {\n      token: \"@rematch\",\n      switchTo: \"@liquidState.otherTag\"\n    }], [/\\{\\%/, {\n      token: \"@rematch\",\n      switchTo: \"@liquidState.otherTag\"\n    }], [/\\/?>/, \"delimiter.html\", \"@pop\"], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/[ \\t\\r\\n]+/]],\n    liquidState: [[/\\{\\{/, \"delimiter.output.liquid\"], [/\\}\\}/, {\n      token: \"delimiter.output.liquid\",\n      switchTo: \"@$S2.$S3\"\n    }], [/\\{\\%/, \"delimiter.tag.liquid\"], [/raw\\s*\\%\\}/, \"delimiter.tag.liquid\", \"@liquidRaw\"], [/\\%\\}/, {\n      token: \"delimiter.tag.liquid\",\n      switchTo: \"@$S2.$S3\"\n    }], {\n      include: \"liquidRoot\"\n    }],\n    liquidRaw: [[/^(?!\\{\\%\\s*endraw\\s*\\%\\}).+/], [/\\{\\%/, \"delimiter.tag.liquid\"], [/@identifier/], [/\\%\\}/, {\n      token: \"delimiter.tag.liquid\",\n      next: \"@root\"\n    }]],\n    liquidRoot: [[/\\d+(\\.\\d+)?/, \"number.liquid\"], [/\"[^\"]*\"/, \"string.liquid\"], [/'[^']*'/, \"string.liquid\"], [/\\s+/], [/@symbol/, {\n      cases: {\n        \"@operators\": \"operator.liquid\",\n        \"@default\": \"\"\n      }\n    }], [/\\./], [/@identifier/, {\n      cases: {\n        \"@constants\": \"keyword.liquid\",\n        \"@builtinFilters\": \"predefined.liquid\",\n        \"@builtinTags\": \"predefined.liquid\",\n        \"@default\": \"variable.liquid\"\n      }\n    }], [/[^}|%]/, \"variable.liquid\"]]\n  }\n};\n\n\n//# sourceURL=webpack://online-conplier/./node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.js?");

/***/ })

}]);