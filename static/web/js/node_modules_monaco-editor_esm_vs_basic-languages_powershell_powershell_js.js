"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkonline_conplier"] = self["webpackChunkonline_conplier"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_powershell_powershell_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js":
/*!************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": function() { return /* binding */ conf; },\n/* harmony export */   \"language\": function() { return /* binding */ language; }\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.0(9d278685b078158491964f8fd7ac9628fffa0f30)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/powershell/powershell.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"#\",\n    blockComment: [\"<#\", \"#>\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\"]\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string\", \"comment\"]\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".ps1\",\n  brackets: [{\n    token: \"delimiter.curly\",\n    open: \"{\",\n    close: \"}\"\n  }, {\n    token: \"delimiter.square\",\n    open: \"[\",\n    close: \"]\"\n  }, {\n    token: \"delimiter.parenthesis\",\n    open: \"(\",\n    close: \")\"\n  }],\n  keywords: [\"begin\", \"break\", \"catch\", \"class\", \"continue\", \"data\", \"define\", \"do\", \"dynamicparam\", \"else\", \"elseif\", \"end\", \"exit\", \"filter\", \"finally\", \"for\", \"foreach\", \"from\", \"function\", \"if\", \"in\", \"param\", \"process\", \"return\", \"switch\", \"throw\", \"trap\", \"try\", \"until\", \"using\", \"var\", \"while\", \"workflow\", \"parallel\", \"sequence\", \"inlinescript\", \"configuration\"],\n  helpKeywords: /SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,\n  symbols: /[=><!~?&%|+\\-*\\/\\^;\\.,]+/,\n  escapes: /`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [[/[a-zA-Z_][\\w-]*/, {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@default\": \"\"\n      }\n    }], [/[ \\t\\r\\n]+/, \"\"], [/^:\\w*/, \"metatag\"], [/\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/, \"variable\"], [/<#/, \"comment\", \"@comment\"], [/#.*$/, \"comment\"], [/[{}()\\[\\]]/, \"@brackets\"], [/@symbols/, \"delimiter\"], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"], [/\\d+?/, \"number\"], [/[;,.]/, \"delimiter\"], [/\\@\"/, \"string\", '@herestring.\"'], [/\\@'/, \"string\", \"@herestring.'\"], [/\"/, {\n      cases: {\n        \"@eos\": \"string\",\n        \"@default\": {\n          token: \"string\",\n          next: '@string.\"'\n        }\n      }\n    }], [/'/, {\n      cases: {\n        \"@eos\": \"string\",\n        \"@default\": {\n          token: \"string\",\n          next: \"@string.'\"\n        }\n      }\n    }]],\n    string: [[/[^\"'\\$`]+/, {\n      cases: {\n        \"@eos\": {\n          token: \"string\",\n          next: \"@popall\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/@escapes/, {\n      cases: {\n        \"@eos\": {\n          token: \"string.escape\",\n          next: \"@popall\"\n        },\n        \"@default\": \"string.escape\"\n      }\n    }], [/`./, {\n      cases: {\n        \"@eos\": {\n          token: \"string.escape.invalid\",\n          next: \"@popall\"\n        },\n        \"@default\": \"string.escape.invalid\"\n      }\n    }], [/\\$[\\w]+$/, {\n      cases: {\n        '$S2==\"': {\n          token: \"variable\",\n          next: \"@popall\"\n        },\n        \"@default\": {\n          token: \"string\",\n          next: \"@popall\"\n        }\n      }\n    }], [/\\$[\\w]+/, {\n      cases: {\n        '$S2==\"': \"variable\",\n        \"@default\": \"string\"\n      }\n    }], [/[\"']/, {\n      cases: {\n        \"$#==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": {\n          cases: {\n            \"@eos\": {\n              token: \"string\",\n              next: \"@popall\"\n            },\n            \"@default\": \"string\"\n          }\n        }\n      }\n    }]],\n    herestring: [[/^\\s*([\"'])@/, {\n      cases: {\n        \"$1==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }], [/[^\\$`]+/, \"string\"], [/@escapes/, \"string.escape\"], [/`./, \"string.escape.invalid\"], [/\\$[\\w]+/, {\n      cases: {\n        '$S2==\"': \"variable\",\n        \"@default\": \"string\"\n      }\n    }]],\n    comment: [[/[^#\\.]+/, \"comment\"], [/#>/, \"comment\", \"@pop\"], [/(\\.)(@helpKeywords)(?!\\w)/, {\n      token: \"comment.keyword.$2\"\n    }], [/[\\.#]/, \"comment\"]]\n  }\n};\n\n\n//# sourceURL=webpack://online-conplier/./node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js?");

/***/ })

}]);