"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkonline_conplier"] = self["webpackChunkonline_conplier"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_scheme_scheme_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.js":
/*!****************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": function() { return /* binding */ conf; },\n/* harmony export */   \"language\": function() { return /* binding */ language; }\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.0(9d278685b078158491964f8fd7ac9628fffa0f30)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/scheme/scheme.ts\nvar conf = {\n  comments: {\n    lineComment: \";\",\n    blockComment: [\"#|\", \"|#\"]\n  },\n  brackets: [[\"(\", \")\"], [\"{\", \"}\"], [\"[\", \"]\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".scheme\",\n  brackets: [{\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }, {\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.curly\"\n  }, {\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.square\"\n  }],\n  keywords: [\"case\", \"do\", \"let\", \"loop\", \"if\", \"else\", \"when\", \"cons\", \"car\", \"cdr\", \"cond\", \"lambda\", \"lambda*\", \"syntax-rules\", \"format\", \"set!\", \"quote\", \"eval\", \"append\", \"list\", \"list?\", \"member?\", \"load\"],\n  constants: [\"#t\", \"#f\"],\n  operators: [\"eq?\", \"eqv?\", \"equal?\", \"and\", \"or\", \"not\", \"null?\"],\n  tokenizer: {\n    root: [[/#[xXoObB][0-9a-fA-F]+/, \"number.hex\"], [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?/, \"number.float\"], [/(?:\\b(?:(define|define-syntax|define-macro))\\b)(\\s+)((?:\\w|\\-|\\!|\\?)*)/, [\"keyword\", \"white\", \"variable\"]], {\n      include: \"@whitespace\"\n    }, {\n      include: \"@strings\"\n    }, [/[a-zA-Z_#][a-zA-Z0-9_\\-\\?\\!\\*]*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@constants\": \"constant\",\n        \"@operators\": \"operators\",\n        \"@default\": \"identifier\"\n      }\n    }]],\n    comment: [[/[^\\|#]+/, \"comment\"], [/#\\|/, \"comment\", \"@push\"], [/\\|#/, \"comment\", \"@pop\"], [/[\\|#]/, \"comment\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/#\\|/, \"comment\", \"@comment\"], [/;.*$/, \"comment\"]],\n    strings: [[/\"$/, \"string\", \"@popall\"], [/\"(?=.)/, \"string\", \"@multiLineString\"]],\n    multiLineString: [[/[^\\\\\"]+$/, \"string\", \"@popall\"], [/[^\\\\\"]+/, \"string\"], [/\\\\./, \"string.escape\"], [/\"/, \"string\", \"@popall\"], [/\\\\$/, \"string\"]]\n  }\n};\n\n\n//# sourceURL=webpack://online-conplier/./node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.js?");

/***/ })

}]);