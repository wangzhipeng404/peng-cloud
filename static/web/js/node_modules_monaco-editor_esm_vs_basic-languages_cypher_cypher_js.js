"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkonline_conplier"] = self["webpackChunkonline_conplier"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_cypher_cypher_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/cypher/cypher.js":
/*!****************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/cypher/cypher.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": function() { return /* binding */ conf; },\n/* harmony export */   \"language\": function() { return /* binding */ language; }\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.0(9d278685b078158491964f8fd7ac9628fffa0f30)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/cypher/cypher.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: `.cypher`,\n  ignoreCase: true,\n  brackets: [{\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.curly\"\n  }, {\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.bracket\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }],\n  keywords: [\"ALL\", \"AND\", \"AS\", \"ASC\", \"ASCENDING\", \"BY\", \"CALL\", \"CASE\", \"CONTAINS\", \"CREATE\", \"DELETE\", \"DESC\", \"DESCENDING\", \"DETACH\", \"DISTINCT\", \"ELSE\", \"END\", \"ENDS\", \"EXISTS\", \"IN\", \"IS\", \"LIMIT\", \"MANDATORY\", \"MATCH\", \"MERGE\", \"NOT\", \"ON\", \"ON\", \"OPTIONAL\", \"OR\", \"ORDER\", \"REMOVE\", \"RETURN\", \"SET\", \"SKIP\", \"STARTS\", \"THEN\", \"UNION\", \"UNWIND\", \"WHEN\", \"WHERE\", \"WITH\", \"XOR\", \"YIELD\"],\n  builtinLiterals: [\"true\", \"TRUE\", \"false\", \"FALSE\", \"null\", \"NULL\"],\n  builtinFunctions: [\"abs\", \"acos\", \"asin\", \"atan\", \"atan2\", \"avg\", \"ceil\", \"coalesce\", \"collect\", \"cos\", \"cot\", \"count\", \"degrees\", \"e\", \"endNode\", \"exists\", \"exp\", \"floor\", \"head\", \"id\", \"keys\", \"labels\", \"last\", \"left\", \"length\", \"log\", \"log10\", \"lTrim\", \"max\", \"min\", \"nodes\", \"percentileCont\", \"percentileDisc\", \"pi\", \"properties\", \"radians\", \"rand\", \"range\", \"relationships\", \"replace\", \"reverse\", \"right\", \"round\", \"rTrim\", \"sign\", \"sin\", \"size\", \"split\", \"sqrt\", \"startNode\", \"stDev\", \"stDevP\", \"substring\", \"sum\", \"tail\", \"tan\", \"timestamp\", \"toBoolean\", \"toFloat\", \"toInteger\", \"toLower\", \"toString\", \"toUpper\", \"trim\", \"type\"],\n  operators: [\"+\", \"-\", \"*\", \"/\", \"%\", \"^\", \"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"->\", \"<-\", \"-->\", \"<--\"],\n  escapes: /\\\\(?:[tbnrf\\\\\"'`]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+/,\n  octaldigits: /[0-7]+/,\n  hexdigits: /[0-9a-fA-F]+/,\n  tokenizer: {\n    root: [[/[{}[\\]()]/, \"@brackets\"], {\n      include: \"common\"\n    }],\n    common: [{\n      include: \"@whitespace\"\n    }, {\n      include: \"@numbers\"\n    }, {\n      include: \"@strings\"\n    }, [/:[a-zA-Z_][\\w]*/, \"type.identifier\"], [/[a-zA-Z_][\\w]*(?=\\()/, {\n      cases: {\n        \"@builtinFunctions\": \"predefined.function\"\n      }\n    }], [/[a-zA-Z_$][\\w$]*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@builtinLiterals\": \"predefined.literal\",\n        \"@default\": \"identifier\"\n      }\n    }], [/`/, \"identifier.escape\", \"@identifierBacktick\"], [/[;,.:|]/, \"delimiter\"], [/[<>=%+\\-*/^]+/, {\n      cases: {\n        \"@operators\": \"delimiter\",\n        \"@default\": \"\"\n      }\n    }]],\n    numbers: [[/-?(@digits)[eE](-?(@digits))?/, \"number.float\"], [/-?(@digits)?\\.(@digits)([eE]-?(@digits))?/, \"number.float\"], [/-?0x(@hexdigits)/, \"number.hex\"], [/-?0(@octaldigits)/, \"number.octal\"], [/-?(@digits)/, \"number\"]],\n    strings: [[/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", \"@stringDouble\"], [/'/, \"string\", \"@stringSingle\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]],\n    comment: [[/\\/\\/.*/, \"comment\"], [/[^/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[/*]/, \"comment\"]],\n    stringDouble: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string\"], [/\\\\./, \"string.invalid\"], [/\"/, \"string\", \"@pop\"]],\n    stringSingle: [[/[^\\\\']+/, \"string\"], [/@escapes/, \"string\"], [/\\\\./, \"string.invalid\"], [/'/, \"string\", \"@pop\"]],\n    identifierBacktick: [[/[^\\\\`]+/, \"identifier.escape\"], [/@escapes/, \"identifier.escape\"], [/\\\\./, \"identifier.escape.invalid\"], [/`/, \"identifier.escape\", \"@pop\"]]\n  }\n};\n\n\n//# sourceURL=webpack://online-conplier/./node_modules/monaco-editor/esm/vs/basic-languages/cypher/cypher.js?");

/***/ })

}]);