"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkonline_conplier"] = self["webpackChunkonline_conplier"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_markdown_markdown_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js":
/*!********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": function() { return /* binding */ conf; },\n/* harmony export */   \"language\": function() { return /* binding */ language; }\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.0(9d278685b078158491964f8fd7ac9628fffa0f30)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/markdown/markdown.ts\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"<\",\n    close: \">\",\n    notIn: [\"string\"]\n  }],\n  surroundingPairs: [{\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),\n      end: new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".md\",\n  control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n  noncontrol: /[^\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n  escapes: /\\\\(?:@control)/,\n  jsescapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n  empty: [\"area\", \"base\", \"basefont\", \"br\", \"col\", \"frame\", \"hr\", \"img\", \"input\", \"isindex\", \"link\", \"meta\", \"param\"],\n  tokenizer: {\n    root: [[/^\\s*\\|/, \"@rematch\", \"@table_header\"], [/^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)/, [\"white\", \"keyword\", \"keyword\", \"keyword\"]], [/^\\s*(=+|\\-+)\\s*$/, \"keyword\"], [/^\\s*((\\*[ ]?)+)\\s*$/, \"meta.separator\"], [/^\\s*>+/, \"comment\"], [/^\\s*([\\*\\-+:]|\\d+\\.)\\s/, \"keyword\"], [/^(\\t|[ ]{4})[^ ].*$/, \"string\"], [/^\\s*~~~\\s*((?:\\w|[\\/\\-#])+)?\\s*$/, {\n      token: \"string\",\n      next: \"@codeblock\"\n    }], [/^\\s*```\\s*((?:\\w|[\\/\\-#])+).*$/, {\n      token: \"string\",\n      next: \"@codeblockgh\",\n      nextEmbedded: \"$1\"\n    }], [/^\\s*```\\s*$/, {\n      token: \"string\",\n      next: \"@codeblock\"\n    }], {\n      include: \"@linecontent\"\n    }],\n    table_header: [{\n      include: \"@table_common\"\n    }, [/[^\\|]+/, \"keyword.table.header\"]],\n    table_body: [{\n      include: \"@table_common\"\n    }, {\n      include: \"@linecontent\"\n    }],\n    table_common: [[/\\s*[\\-:]+\\s*/, {\n      token: \"keyword\",\n      switchTo: \"table_body\"\n    }], [/^\\s*\\|/, \"keyword.table.left\"], [/^\\s*[^\\|]/, \"@rematch\", \"@pop\"], [/^\\s*$/, \"@rematch\", \"@pop\"], [/\\|/, {\n      cases: {\n        \"@eos\": \"keyword.table.right\",\n        \"@default\": \"keyword.table.middle\"\n      }\n    }]],\n    codeblock: [[/^\\s*~~~\\s*$/, {\n      token: \"string\",\n      next: \"@pop\"\n    }], [/^\\s*```\\s*$/, {\n      token: \"string\",\n      next: \"@pop\"\n    }], [/.*$/, \"variable.source\"]],\n    codeblockgh: [[/```\\s*$/, {\n      token: \"string\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/[^`]+/, \"variable.source\"]],\n    linecontent: [[/&\\w+;/, \"string.escape\"], [/@escapes/, \"escape\"], [/\\b__([^\\\\_]|@escapes|_(?!_))+__\\b/, \"strong\"], [/\\*\\*([^\\\\*]|@escapes|\\*(?!\\*))+\\*\\*/, \"strong\"], [/\\b_[^_]+_\\b/, \"emphasis\"], [/\\*([^\\\\*]|@escapes)+\\*/, \"emphasis\"], [/`([^\\\\`]|@escapes)+`/, \"variable\"], [/\\{+[^}]+\\}+/, \"string.target\"], [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))/, [\"string.link\", \"\", \"string.link\"]], [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])/, \"string.link\"], {\n      include: \"html\"\n    }],\n    html: [[/<(\\w+)\\/>/, \"tag\"], [/<(\\w+)(\\-|\\w)*/, {\n      cases: {\n        \"@empty\": {\n          token: \"tag\",\n          next: \"@tag.$1\"\n        },\n        \"@default\": {\n          token: \"tag\",\n          next: \"@tag.$1\"\n        }\n      }\n    }], [/<\\/(\\w+)(\\-|\\w)*\\s*>/, {\n      token: \"tag\"\n    }], [/<!--/, \"comment\", \"@comment\"]],\n    comment: [[/[^<\\-]+/, \"comment.content\"], [/-->/, \"comment\", \"@pop\"], [/<!--/, \"comment.content.invalid\"], [/[<\\-]/, \"comment.content\"]],\n    tag: [[/[ \\t\\r\\n]+/, \"white\"], [/(type)(\\s*=\\s*)(\")([^\"]+)(\")/, [\"attribute.name.html\", \"delimiter.html\", \"string.html\", {\n      token: \"string.html\",\n      switchTo: \"@tag.$S2.$4\"\n    }, \"string.html\"]], [/(type)(\\s*=\\s*)(')([^']+)(')/, [\"attribute.name.html\", \"delimiter.html\", \"string.html\", {\n      token: \"string.html\",\n      switchTo: \"@tag.$S2.$4\"\n    }, \"string.html\"]], [/(\\w+)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name.html\", \"delimiter.html\", \"string.html\"]], [/\\w+/, \"attribute.name.html\"], [/\\/>/, \"tag\", \"@pop\"], [/>/, {\n      cases: {\n        \"$S2==style\": {\n          token: \"tag\",\n          switchTo: \"embeddedStyle\",\n          nextEmbedded: \"text/css\"\n        },\n        \"$S2==script\": {\n          cases: {\n            $S3: {\n              token: \"tag\",\n              switchTo: \"embeddedScript\",\n              nextEmbedded: \"$S3\"\n            },\n            \"@default\": {\n              token: \"tag\",\n              switchTo: \"embeddedScript\",\n              nextEmbedded: \"text/javascript\"\n            }\n          }\n        },\n        \"@default\": {\n          token: \"tag\",\n          next: \"@pop\"\n        }\n      }\n    }]],\n    embeddedStyle: [[/[^<]+/, \"\"], [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/</, \"\"]],\n    embeddedScript: [[/[^<]+/, \"\"], [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/</, \"\"]]\n  }\n};\n\n\n//# sourceURL=webpack://online-conplier/./node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js?");

/***/ })

}]);