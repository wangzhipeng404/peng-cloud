"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkonline_conplier"] = self["webpackChunkonline_conplier"] || []).push([["node_modules_monaco-editor_esm_vs_language_html_htmlMode_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js":
/*!*********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CompletionAdapter\": function() { return /* binding */ CompletionAdapter; },\n/* harmony export */   \"DefinitionAdapter\": function() { return /* binding */ DefinitionAdapter; },\n/* harmony export */   \"DiagnosticsAdapter\": function() { return /* binding */ DiagnosticsAdapter; },\n/* harmony export */   \"DocumentColorAdapter\": function() { return /* binding */ DocumentColorAdapter; },\n/* harmony export */   \"DocumentFormattingEditProvider\": function() { return /* binding */ DocumentFormattingEditProvider; },\n/* harmony export */   \"DocumentHighlightAdapter\": function() { return /* binding */ DocumentHighlightAdapter; },\n/* harmony export */   \"DocumentLinkAdapter\": function() { return /* binding */ DocumentLinkAdapter; },\n/* harmony export */   \"DocumentRangeFormattingEditProvider\": function() { return /* binding */ DocumentRangeFormattingEditProvider; },\n/* harmony export */   \"DocumentSymbolAdapter\": function() { return /* binding */ DocumentSymbolAdapter; },\n/* harmony export */   \"FoldingRangeAdapter\": function() { return /* binding */ FoldingRangeAdapter; },\n/* harmony export */   \"HoverAdapter\": function() { return /* binding */ HoverAdapter; },\n/* harmony export */   \"ReferenceAdapter\": function() { return /* binding */ ReferenceAdapter; },\n/* harmony export */   \"RenameAdapter\": function() { return /* binding */ RenameAdapter; },\n/* harmony export */   \"SelectionRangeAdapter\": function() { return /* binding */ SelectionRangeAdapter; },\n/* harmony export */   \"WorkerManager\": function() { return /* binding */ WorkerManager; },\n/* harmony export */   \"fromPosition\": function() { return /* binding */ fromPosition; },\n/* harmony export */   \"fromRange\": function() { return /* binding */ fromRange; },\n/* harmony export */   \"setupMode\": function() { return /* binding */ setupMode; },\n/* harmony export */   \"setupMode1\": function() { return /* binding */ setupMode1; },\n/* harmony export */   \"toRange\": function() { return /* binding */ toRange; },\n/* harmony export */   \"toTextEdit\": function() { return /* binding */ toTextEdit; }\n/* harmony export */ });\n/* harmony import */ var D_Code_vue_onlie_editor_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var core_js_modules_es_error_cause_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.error.cause.js */ \"./node_modules/core-js/modules/es.error.cause.js\");\n/* harmony import */ var core_js_modules_es_error_cause_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_error_cause_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../editor/editor.api.js */ \"./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ \"./node_modules/console-browserify/index.js\");\n\n\n\n\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.0(9d278685b078158491964f8fd7ac9628fffa0f30)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n\n  return to;\n};\n\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\")); // src/fillers/monaco-editor-core.ts\n\n\nvar monaco_editor_core_exports = {};\n\n__reExport(monaco_editor_core_exports, _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_3__);\n\n // src/language/html/workerManager.ts\n\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1e3;\nvar WorkerManager = class WorkerManager {\n  constructor(defaults) {\n    (0,D_Code_vue_onlie_editor_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_defaults\", void 0);\n\n    (0,D_Code_vue_onlie_editor_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_idleCheckInterval\", void 0);\n\n    (0,D_Code_vue_onlie_editor_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_lastUsedTime\", void 0);\n\n    (0,D_Code_vue_onlie_editor_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_configChangeListener\", void 0);\n\n    (0,D_Code_vue_onlie_editor_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_worker\", void 0);\n\n    (0,D_Code_vue_onlie_editor_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_client\", void 0);\n\n    this._defaults = defaults;\n    this._worker = null;\n    this._client = null;\n    this._idleCheckInterval = window.setInterval(() => this._checkIfIdle(), 30 * 1e3);\n    this._lastUsedTime = 0;\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\n  }\n\n  _stopWorker() {\n    if (this._worker) {\n      this._worker.dispose();\n\n      this._worker = null;\n    }\n\n    this._client = null;\n  }\n\n  dispose() {\n    clearInterval(this._idleCheckInterval);\n\n    this._configChangeListener.dispose();\n\n    this._stopWorker();\n  }\n\n  _checkIfIdle() {\n    if (!this._worker) {\n      return;\n    }\n\n    let timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n\n    if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n      this._stopWorker();\n    }\n  }\n\n  _getClient() {\n    this._lastUsedTime = Date.now();\n\n    if (!this._client) {\n      this._worker = monaco_editor_core_exports.editor.createWebWorker({\n        moduleId: \"vs/language/html/htmlWorker\",\n        createData: {\n          languageSettings: this._defaults.options,\n          languageId: this._defaults.languageId\n        },\n        label: this._defaults.languageId\n      });\n      this._client = this._worker.getProxy();\n    }\n\n    return this._client;\n  }\n\n  getLanguageServiceWorker(...resources) {\n    let _client;\n\n    return this._getClient().then(client => {\n      _client = client;\n    }).then(_ => {\n      if (this._worker) {\n        return this._worker.withSyncedResources(resources);\n      }\n    }).then(_ => _client);\n  }\n\n}; // node_modules/vscode-languageserver-types/lib/esm/main.js\n\nvar integer;\n\n(function (integer2) {\n  integer2.MIN_VALUE = -2147483648;\n  integer2.MAX_VALUE = 2147483647;\n})(integer || (integer = {}));\n\nvar uinteger;\n\n(function (uinteger2) {\n  uinteger2.MIN_VALUE = 0;\n  uinteger2.MAX_VALUE = 2147483647;\n})(uinteger || (uinteger = {}));\n\nvar Position;\n\n(function (Position3) {\n  function create(line, character) {\n    if (line === Number.MAX_VALUE) {\n      line = uinteger.MAX_VALUE;\n    }\n\n    if (character === Number.MAX_VALUE) {\n      character = uinteger.MAX_VALUE;\n    }\n\n    return {\n      line,\n      character\n    };\n  }\n\n  Position3.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n  }\n\n  Position3.is = is;\n})(Position || (Position = {}));\n\nvar Range;\n\n(function (Range3) {\n  function create(one, two, three, four) {\n    if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n      return {\n        start: Position.create(one, two),\n        end: Position.create(three, four)\n      };\n    } else if (Position.is(one) && Position.is(two)) {\n      return {\n        start: one,\n        end: two\n      };\n    } else {\n      throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n    }\n  }\n\n  Range3.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n  }\n\n  Range3.is = is;\n})(Range || (Range = {}));\n\nvar Location;\n\n(function (Location2) {\n  function create(uri, range) {\n    return {\n      uri,\n      range\n    };\n  }\n\n  Location2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n  }\n\n  Location2.is = is;\n})(Location || (Location = {}));\n\nvar LocationLink;\n\n(function (LocationLink2) {\n  function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n    return {\n      targetUri,\n      targetRange,\n      targetSelectionRange,\n      originSelectionRange\n    };\n  }\n\n  LocationLink2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri) && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange)) && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n  }\n\n  LocationLink2.is = is;\n})(LocationLink || (LocationLink = {}));\n\nvar Color;\n\n(function (Color2) {\n  function create(red, green, blue, alpha) {\n    return {\n      red,\n      green,\n      blue,\n      alpha\n    };\n  }\n\n  Color2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.numberRange(candidate.red, 0, 1) && Is.numberRange(candidate.green, 0, 1) && Is.numberRange(candidate.blue, 0, 1) && Is.numberRange(candidate.alpha, 0, 1);\n  }\n\n  Color2.is = is;\n})(Color || (Color = {}));\n\nvar ColorInformation;\n\n(function (ColorInformation2) {\n  function create(range, color) {\n    return {\n      range,\n      color\n    };\n  }\n\n  ColorInformation2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Range.is(candidate.range) && Color.is(candidate.color);\n  }\n\n  ColorInformation2.is = is;\n})(ColorInformation || (ColorInformation = {}));\n\nvar ColorPresentation;\n\n(function (ColorPresentation2) {\n  function create(label, textEdit, additionalTextEdits) {\n    return {\n      label,\n      textEdit,\n      additionalTextEdits\n    };\n  }\n\n  ColorPresentation2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.string(candidate.label) && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate)) && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n  }\n\n  ColorPresentation2.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n\nvar FoldingRangeKind;\n\n(function (FoldingRangeKind2) {\n  FoldingRangeKind2[\"Comment\"] = \"comment\";\n  FoldingRangeKind2[\"Imports\"] = \"imports\";\n  FoldingRangeKind2[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n\nvar FoldingRange;\n\n(function (FoldingRange2) {\n  function create(startLine, endLine, startCharacter, endCharacter, kind) {\n    var result = {\n      startLine,\n      endLine\n    };\n\n    if (Is.defined(startCharacter)) {\n      result.startCharacter = startCharacter;\n    }\n\n    if (Is.defined(endCharacter)) {\n      result.endCharacter = endCharacter;\n    }\n\n    if (Is.defined(kind)) {\n      result.kind = kind;\n    }\n\n    return result;\n  }\n\n  FoldingRange2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine) && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter)) && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter)) && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n  }\n\n  FoldingRange2.is = is;\n})(FoldingRange || (FoldingRange = {}));\n\nvar DiagnosticRelatedInformation;\n\n(function (DiagnosticRelatedInformation2) {\n  function create(location, message) {\n    return {\n      location,\n      message\n    };\n  }\n\n  DiagnosticRelatedInformation2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n  }\n\n  DiagnosticRelatedInformation2.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n\nvar DiagnosticSeverity;\n\n(function (DiagnosticSeverity2) {\n  DiagnosticSeverity2.Error = 1;\n  DiagnosticSeverity2.Warning = 2;\n  DiagnosticSeverity2.Information = 3;\n  DiagnosticSeverity2.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n\nvar DiagnosticTag;\n\n(function (DiagnosticTag2) {\n  DiagnosticTag2.Unnecessary = 1;\n  DiagnosticTag2.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n\nvar CodeDescription;\n\n(function (CodeDescription2) {\n  function is(value) {\n    var candidate = value;\n    return candidate !== void 0 && candidate !== null && Is.string(candidate.href);\n  }\n\n  CodeDescription2.is = is;\n})(CodeDescription || (CodeDescription = {}));\n\nvar Diagnostic;\n\n(function (Diagnostic2) {\n  function create(range, message, severity, code, source, relatedInformation) {\n    var result = {\n      range,\n      message\n    };\n\n    if (Is.defined(severity)) {\n      result.severity = severity;\n    }\n\n    if (Is.defined(code)) {\n      result.code = code;\n    }\n\n    if (Is.defined(source)) {\n      result.source = source;\n    }\n\n    if (Is.defined(relatedInformation)) {\n      result.relatedInformation = relatedInformation;\n    }\n\n    return result;\n  }\n\n  Diagnostic2.create = create;\n\n  function is(value) {\n    var _a;\n\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && Is.string(candidate.message) && (Is.number(candidate.severity) || Is.undefined(candidate.severity)) && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code)) && (Is.undefined(candidate.codeDescription) || Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)) && (Is.string(candidate.source) || Is.undefined(candidate.source)) && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n  }\n\n  Diagnostic2.is = is;\n})(Diagnostic || (Diagnostic = {}));\n\nvar Command;\n\n(function (Command2) {\n  function create(title, command) {\n    var args = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n\n    var result = {\n      title,\n      command\n    };\n\n    if (Is.defined(args) && args.length > 0) {\n      result.arguments = args;\n    }\n\n    return result;\n  }\n\n  Command2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n  }\n\n  Command2.is = is;\n})(Command || (Command = {}));\n\nvar TextEdit;\n\n(function (TextEdit2) {\n  function replace(range, newText) {\n    return {\n      range,\n      newText\n    };\n  }\n\n  TextEdit2.replace = replace;\n\n  function insert(position, newText) {\n    return {\n      range: {\n        start: position,\n        end: position\n      },\n      newText\n    };\n  }\n\n  TextEdit2.insert = insert;\n\n  function del(range) {\n    return {\n      range,\n      newText: \"\"\n    };\n  }\n\n  TextEdit2.del = del;\n\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.newText) && Range.is(candidate.range);\n  }\n\n  TextEdit2.is = is;\n})(TextEdit || (TextEdit = {}));\n\nvar ChangeAnnotation;\n\n(function (ChangeAnnotation2) {\n  function create(label, needsConfirmation, description) {\n    var result = {\n      label\n    };\n\n    if (needsConfirmation !== void 0) {\n      result.needsConfirmation = needsConfirmation;\n    }\n\n    if (description !== void 0) {\n      result.description = description;\n    }\n\n    return result;\n  }\n\n  ChangeAnnotation2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate !== void 0 && Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === void 0) && (Is.string(candidate.description) || candidate.description === void 0);\n  }\n\n  ChangeAnnotation2.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\n\nvar ChangeAnnotationIdentifier;\n\n(function (ChangeAnnotationIdentifier2) {\n  function is(value) {\n    var candidate = value;\n    return typeof candidate === \"string\";\n  }\n\n  ChangeAnnotationIdentifier2.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\n\nvar AnnotatedTextEdit;\n\n(function (AnnotatedTextEdit2) {\n  function replace(range, newText, annotation) {\n    return {\n      range,\n      newText,\n      annotationId: annotation\n    };\n  }\n\n  AnnotatedTextEdit2.replace = replace;\n\n  function insert(position, newText, annotation) {\n    return {\n      range: {\n        start: position,\n        end: position\n      },\n      newText,\n      annotationId: annotation\n    };\n  }\n\n  AnnotatedTextEdit2.insert = insert;\n\n  function del(range, annotation) {\n    return {\n      range,\n      newText: \"\",\n      annotationId: annotation\n    };\n  }\n\n  AnnotatedTextEdit2.del = del;\n\n  function is(value) {\n    var candidate = value;\n    return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n\n  AnnotatedTextEdit2.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n\nvar TextDocumentEdit;\n\n(function (TextDocumentEdit2) {\n  function create(textDocument, edits) {\n    return {\n      textDocument,\n      edits\n    };\n  }\n\n  TextDocumentEdit2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument) && Array.isArray(candidate.edits);\n  }\n\n  TextDocumentEdit2.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\n\nvar CreateFile;\n\n(function (CreateFile2) {\n  function create(uri, options, annotation) {\n    var result = {\n      kind: \"create\",\n      uri\n    };\n\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n      result.options = options;\n    }\n\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n\n    return result;\n  }\n\n  CreateFile2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate && candidate.kind === \"create\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n\n  CreateFile2.is = is;\n})(CreateFile || (CreateFile = {}));\n\nvar RenameFile;\n\n(function (RenameFile2) {\n  function create(oldUri, newUri, options, annotation) {\n    var result = {\n      kind: \"rename\",\n      oldUri,\n      newUri\n    };\n\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n      result.options = options;\n    }\n\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n\n    return result;\n  }\n\n  RenameFile2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate && candidate.kind === \"rename\" && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n\n  RenameFile2.is = is;\n})(RenameFile || (RenameFile = {}));\n\nvar DeleteFile;\n\n(function (DeleteFile2) {\n  function create(uri, options, annotation) {\n    var result = {\n      kind: \"delete\",\n      uri\n    };\n\n    if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\n      result.options = options;\n    }\n\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n\n    return result;\n  }\n\n  DeleteFile2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate && candidate.kind === \"delete\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n\n  DeleteFile2.is = is;\n})(DeleteFile || (DeleteFile = {}));\n\nvar WorkspaceEdit;\n\n(function (WorkspaceEdit2) {\n  function is(value) {\n    var candidate = value;\n    return candidate && (candidate.changes !== void 0 || candidate.documentChanges !== void 0) && (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\n      if (Is.string(change.kind)) {\n        return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n      } else {\n        return TextDocumentEdit.is(change);\n      }\n    }));\n  }\n\n  WorkspaceEdit2.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\n\nvar TextEditChangeImpl = function () {\n  function TextEditChangeImpl2(edits, changeAnnotations) {\n    this.edits = edits;\n    this.changeAnnotations = changeAnnotations;\n  }\n\n  TextEditChangeImpl2.prototype.insert = function (position, newText, annotation) {\n    var edit;\n    var id;\n\n    if (annotation === void 0) {\n      edit = TextEdit.insert(position, newText);\n    } else if (ChangeAnnotationIdentifier.is(annotation)) {\n      id = annotation;\n      edit = AnnotatedTextEdit.insert(position, newText, annotation);\n    } else {\n      this.assertChangeAnnotations(this.changeAnnotations);\n      id = this.changeAnnotations.manage(annotation);\n      edit = AnnotatedTextEdit.insert(position, newText, id);\n    }\n\n    this.edits.push(edit);\n\n    if (id !== void 0) {\n      return id;\n    }\n  };\n\n  TextEditChangeImpl2.prototype.replace = function (range, newText, annotation) {\n    var edit;\n    var id;\n\n    if (annotation === void 0) {\n      edit = TextEdit.replace(range, newText);\n    } else if (ChangeAnnotationIdentifier.is(annotation)) {\n      id = annotation;\n      edit = AnnotatedTextEdit.replace(range, newText, annotation);\n    } else {\n      this.assertChangeAnnotations(this.changeAnnotations);\n      id = this.changeAnnotations.manage(annotation);\n      edit = AnnotatedTextEdit.replace(range, newText, id);\n    }\n\n    this.edits.push(edit);\n\n    if (id !== void 0) {\n      return id;\n    }\n  };\n\n  TextEditChangeImpl2.prototype.delete = function (range, annotation) {\n    var edit;\n    var id;\n\n    if (annotation === void 0) {\n      edit = TextEdit.del(range);\n    } else if (ChangeAnnotationIdentifier.is(annotation)) {\n      id = annotation;\n      edit = AnnotatedTextEdit.del(range, annotation);\n    } else {\n      this.assertChangeAnnotations(this.changeAnnotations);\n      id = this.changeAnnotations.manage(annotation);\n      edit = AnnotatedTextEdit.del(range, id);\n    }\n\n    this.edits.push(edit);\n\n    if (id !== void 0) {\n      return id;\n    }\n  };\n\n  TextEditChangeImpl2.prototype.add = function (edit) {\n    this.edits.push(edit);\n  };\n\n  TextEditChangeImpl2.prototype.all = function () {\n    return this.edits;\n  };\n\n  TextEditChangeImpl2.prototype.clear = function () {\n    this.edits.splice(0, this.edits.length);\n  };\n\n  TextEditChangeImpl2.prototype.assertChangeAnnotations = function (value) {\n    if (value === void 0) {\n      throw new Error(\"Text edit change is not configured to manage change annotations.\");\n    }\n  };\n\n  return TextEditChangeImpl2;\n}();\n\nvar ChangeAnnotations = function () {\n  function ChangeAnnotations2(annotations) {\n    this._annotations = annotations === void 0 ? /* @__PURE__ */Object.create(null) : annotations;\n    this._counter = 0;\n    this._size = 0;\n  }\n\n  ChangeAnnotations2.prototype.all = function () {\n    return this._annotations;\n  };\n\n  Object.defineProperty(ChangeAnnotations2.prototype, \"size\", {\n    get: function () {\n      return this._size;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ChangeAnnotations2.prototype.manage = function (idOrAnnotation, annotation) {\n    var id;\n\n    if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n      id = idOrAnnotation;\n    } else {\n      id = this.nextId();\n      annotation = idOrAnnotation;\n    }\n\n    if (this._annotations[id] !== void 0) {\n      throw new Error(\"Id \" + id + \" is already in use.\");\n    }\n\n    if (annotation === void 0) {\n      throw new Error(\"No annotation provided for id \" + id);\n    }\n\n    this._annotations[id] = annotation;\n    this._size++;\n    return id;\n  };\n\n  ChangeAnnotations2.prototype.nextId = function () {\n    this._counter++;\n    return this._counter.toString();\n  };\n\n  return ChangeAnnotations2;\n}();\n\nvar WorkspaceChange = function () {\n  function WorkspaceChange2(workspaceEdit) {\n    var _this = this;\n\n    this._textEditChanges = /* @__PURE__ */Object.create(null);\n\n    if (workspaceEdit !== void 0) {\n      this._workspaceEdit = workspaceEdit;\n\n      if (workspaceEdit.documentChanges) {\n        this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n        workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        workspaceEdit.documentChanges.forEach(function (change) {\n          if (TextDocumentEdit.is(change)) {\n            var textEditChange = new TextEditChangeImpl(change.edits, _this._changeAnnotations);\n            _this._textEditChanges[change.textDocument.uri] = textEditChange;\n          }\n        });\n      } else if (workspaceEdit.changes) {\n        Object.keys(workspaceEdit.changes).forEach(function (key) {\n          var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n          _this._textEditChanges[key] = textEditChange;\n        });\n      }\n    } else {\n      this._workspaceEdit = {};\n    }\n  }\n\n  Object.defineProperty(WorkspaceChange2.prototype, \"edit\", {\n    get: function () {\n      this.initDocumentChanges();\n\n      if (this._changeAnnotations !== void 0) {\n        if (this._changeAnnotations.size === 0) {\n          this._workspaceEdit.changeAnnotations = void 0;\n        } else {\n          this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n      }\n\n      return this._workspaceEdit;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  WorkspaceChange2.prototype.getTextEditChange = function (key) {\n    if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n      this.initDocumentChanges();\n\n      if (this._workspaceEdit.documentChanges === void 0) {\n        throw new Error(\"Workspace edit is not configured for document changes.\");\n      }\n\n      var textDocument = {\n        uri: key.uri,\n        version: key.version\n      };\n      var result = this._textEditChanges[textDocument.uri];\n\n      if (!result) {\n        var edits = [];\n        var textDocumentEdit = {\n          textDocument,\n          edits\n        };\n\n        this._workspaceEdit.documentChanges.push(textDocumentEdit);\n\n        result = new TextEditChangeImpl(edits, this._changeAnnotations);\n        this._textEditChanges[textDocument.uri] = result;\n      }\n\n      return result;\n    } else {\n      this.initChanges();\n\n      if (this._workspaceEdit.changes === void 0) {\n        throw new Error(\"Workspace edit is not configured for normal text edit changes.\");\n      }\n\n      var result = this._textEditChanges[key];\n\n      if (!result) {\n        var edits = [];\n        this._workspaceEdit.changes[key] = edits;\n        result = new TextEditChangeImpl(edits);\n        this._textEditChanges[key] = result;\n      }\n\n      return result;\n    }\n  };\n\n  WorkspaceChange2.prototype.initDocumentChanges = function () {\n    if (this._workspaceEdit.documentChanges === void 0 && this._workspaceEdit.changes === void 0) {\n      this._changeAnnotations = new ChangeAnnotations();\n      this._workspaceEdit.documentChanges = [];\n      this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n    }\n  };\n\n  WorkspaceChange2.prototype.initChanges = function () {\n    if (this._workspaceEdit.documentChanges === void 0 && this._workspaceEdit.changes === void 0) {\n      this._workspaceEdit.changes = /* @__PURE__ */Object.create(null);\n    }\n  };\n\n  WorkspaceChange2.prototype.createFile = function (uri, optionsOrAnnotation, options) {\n    this.initDocumentChanges();\n\n    if (this._workspaceEdit.documentChanges === void 0) {\n      throw new Error(\"Workspace edit is not configured for document changes.\");\n    }\n\n    var annotation;\n\n    if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n      annotation = optionsOrAnnotation;\n    } else {\n      options = optionsOrAnnotation;\n    }\n\n    var operation;\n    var id;\n\n    if (annotation === void 0) {\n      operation = CreateFile.create(uri, options);\n    } else {\n      id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n      operation = CreateFile.create(uri, options, id);\n    }\n\n    this._workspaceEdit.documentChanges.push(operation);\n\n    if (id !== void 0) {\n      return id;\n    }\n  };\n\n  WorkspaceChange2.prototype.renameFile = function (oldUri, newUri, optionsOrAnnotation, options) {\n    this.initDocumentChanges();\n\n    if (this._workspaceEdit.documentChanges === void 0) {\n      throw new Error(\"Workspace edit is not configured for document changes.\");\n    }\n\n    var annotation;\n\n    if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n      annotation = optionsOrAnnotation;\n    } else {\n      options = optionsOrAnnotation;\n    }\n\n    var operation;\n    var id;\n\n    if (annotation === void 0) {\n      operation = RenameFile.create(oldUri, newUri, options);\n    } else {\n      id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n      operation = RenameFile.create(oldUri, newUri, options, id);\n    }\n\n    this._workspaceEdit.documentChanges.push(operation);\n\n    if (id !== void 0) {\n      return id;\n    }\n  };\n\n  WorkspaceChange2.prototype.deleteFile = function (uri, optionsOrAnnotation, options) {\n    this.initDocumentChanges();\n\n    if (this._workspaceEdit.documentChanges === void 0) {\n      throw new Error(\"Workspace edit is not configured for document changes.\");\n    }\n\n    var annotation;\n\n    if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n      annotation = optionsOrAnnotation;\n    } else {\n      options = optionsOrAnnotation;\n    }\n\n    var operation;\n    var id;\n\n    if (annotation === void 0) {\n      operation = DeleteFile.create(uri, options);\n    } else {\n      id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n      operation = DeleteFile.create(uri, options, id);\n    }\n\n    this._workspaceEdit.documentChanges.push(operation);\n\n    if (id !== void 0) {\n      return id;\n    }\n  };\n\n  return WorkspaceChange2;\n}();\n\nvar TextDocumentIdentifier;\n\n(function (TextDocumentIdentifier2) {\n  function create(uri) {\n    return {\n      uri\n    };\n  }\n\n  TextDocumentIdentifier2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri);\n  }\n\n  TextDocumentIdentifier2.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n\nvar VersionedTextDocumentIdentifier;\n\n(function (VersionedTextDocumentIdentifier2) {\n  function create(uri, version) {\n    return {\n      uri,\n      version\n    };\n  }\n\n  VersionedTextDocumentIdentifier2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n  }\n\n  VersionedTextDocumentIdentifier2.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n\nvar OptionalVersionedTextDocumentIdentifier;\n\n(function (OptionalVersionedTextDocumentIdentifier2) {\n  function create(uri, version) {\n    return {\n      uri,\n      version\n    };\n  }\n\n  OptionalVersionedTextDocumentIdentifier2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n  }\n\n  OptionalVersionedTextDocumentIdentifier2.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n\nvar TextDocumentItem;\n\n(function (TextDocumentItem2) {\n  function create(uri, languageId, version, text) {\n    return {\n      uri,\n      languageId,\n      version,\n      text\n    };\n  }\n\n  TextDocumentItem2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n  }\n\n  TextDocumentItem2.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n\nvar MarkupKind;\n\n(function (MarkupKind2) {\n  MarkupKind2.PlainText = \"plaintext\";\n  MarkupKind2.Markdown = \"markdown\";\n})(MarkupKind || (MarkupKind = {}));\n\n(function (MarkupKind2) {\n  function is(value) {\n    var candidate = value;\n    return candidate === MarkupKind2.PlainText || candidate === MarkupKind2.Markdown;\n  }\n\n  MarkupKind2.is = is;\n})(MarkupKind || (MarkupKind = {}));\n\nvar MarkupContent;\n\n(function (MarkupContent2) {\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n  }\n\n  MarkupContent2.is = is;\n})(MarkupContent || (MarkupContent = {}));\n\nvar CompletionItemKind;\n\n(function (CompletionItemKind2) {\n  CompletionItemKind2.Text = 1;\n  CompletionItemKind2.Method = 2;\n  CompletionItemKind2.Function = 3;\n  CompletionItemKind2.Constructor = 4;\n  CompletionItemKind2.Field = 5;\n  CompletionItemKind2.Variable = 6;\n  CompletionItemKind2.Class = 7;\n  CompletionItemKind2.Interface = 8;\n  CompletionItemKind2.Module = 9;\n  CompletionItemKind2.Property = 10;\n  CompletionItemKind2.Unit = 11;\n  CompletionItemKind2.Value = 12;\n  CompletionItemKind2.Enum = 13;\n  CompletionItemKind2.Keyword = 14;\n  CompletionItemKind2.Snippet = 15;\n  CompletionItemKind2.Color = 16;\n  CompletionItemKind2.File = 17;\n  CompletionItemKind2.Reference = 18;\n  CompletionItemKind2.Folder = 19;\n  CompletionItemKind2.EnumMember = 20;\n  CompletionItemKind2.Constant = 21;\n  CompletionItemKind2.Struct = 22;\n  CompletionItemKind2.Event = 23;\n  CompletionItemKind2.Operator = 24;\n  CompletionItemKind2.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n\nvar InsertTextFormat;\n\n(function (InsertTextFormat2) {\n  InsertTextFormat2.PlainText = 1;\n  InsertTextFormat2.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n\nvar CompletionItemTag;\n\n(function (CompletionItemTag2) {\n  CompletionItemTag2.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n\nvar InsertReplaceEdit;\n\n(function (InsertReplaceEdit2) {\n  function create(newText, insert, replace) {\n    return {\n      newText,\n      insert,\n      replace\n    };\n  }\n\n  InsertReplaceEdit2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n  }\n\n  InsertReplaceEdit2.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n\nvar InsertTextMode;\n\n(function (InsertTextMode2) {\n  InsertTextMode2.asIs = 1;\n  InsertTextMode2.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\n\nvar CompletionItem;\n\n(function (CompletionItem2) {\n  function create(label) {\n    return {\n      label\n    };\n  }\n\n  CompletionItem2.create = create;\n})(CompletionItem || (CompletionItem = {}));\n\nvar CompletionList;\n\n(function (CompletionList2) {\n  function create(items, isIncomplete) {\n    return {\n      items: items ? items : [],\n      isIncomplete: !!isIncomplete\n    };\n  }\n\n  CompletionList2.create = create;\n})(CompletionList || (CompletionList = {}));\n\nvar MarkedString;\n\n(function (MarkedString2) {\n  function fromPlainText(plainText) {\n    return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\");\n  }\n\n  MarkedString2.fromPlainText = fromPlainText;\n\n  function is(value) {\n    var candidate = value;\n    return Is.string(candidate) || Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value);\n  }\n\n  MarkedString2.is = is;\n})(MarkedString || (MarkedString = {}));\n\nvar Hover;\n\n(function (Hover2) {\n  function is(value) {\n    var candidate = value;\n    return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) || MarkedString.is(candidate.contents) || Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\n  }\n\n  Hover2.is = is;\n})(Hover || (Hover = {}));\n\nvar ParameterInformation;\n\n(function (ParameterInformation2) {\n  function create(label, documentation) {\n    return documentation ? {\n      label,\n      documentation\n    } : {\n      label\n    };\n  }\n\n  ParameterInformation2.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n\nvar SignatureInformation;\n\n(function (SignatureInformation2) {\n  function create(label, documentation) {\n    var parameters = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      parameters[_i - 2] = arguments[_i];\n    }\n\n    var result = {\n      label\n    };\n\n    if (Is.defined(documentation)) {\n      result.documentation = documentation;\n    }\n\n    if (Is.defined(parameters)) {\n      result.parameters = parameters;\n    } else {\n      result.parameters = [];\n    }\n\n    return result;\n  }\n\n  SignatureInformation2.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n\nvar DocumentHighlightKind;\n\n(function (DocumentHighlightKind2) {\n  DocumentHighlightKind2.Text = 1;\n  DocumentHighlightKind2.Read = 2;\n  DocumentHighlightKind2.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n\nvar DocumentHighlight;\n\n(function (DocumentHighlight2) {\n  function create(range, kind) {\n    var result = {\n      range\n    };\n\n    if (Is.number(kind)) {\n      result.kind = kind;\n    }\n\n    return result;\n  }\n\n  DocumentHighlight2.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n\nvar SymbolKind;\n\n(function (SymbolKind2) {\n  SymbolKind2.File = 1;\n  SymbolKind2.Module = 2;\n  SymbolKind2.Namespace = 3;\n  SymbolKind2.Package = 4;\n  SymbolKind2.Class = 5;\n  SymbolKind2.Method = 6;\n  SymbolKind2.Property = 7;\n  SymbolKind2.Field = 8;\n  SymbolKind2.Constructor = 9;\n  SymbolKind2.Enum = 10;\n  SymbolKind2.Interface = 11;\n  SymbolKind2.Function = 12;\n  SymbolKind2.Variable = 13;\n  SymbolKind2.Constant = 14;\n  SymbolKind2.String = 15;\n  SymbolKind2.Number = 16;\n  SymbolKind2.Boolean = 17;\n  SymbolKind2.Array = 18;\n  SymbolKind2.Object = 19;\n  SymbolKind2.Key = 20;\n  SymbolKind2.Null = 21;\n  SymbolKind2.EnumMember = 22;\n  SymbolKind2.Struct = 23;\n  SymbolKind2.Event = 24;\n  SymbolKind2.Operator = 25;\n  SymbolKind2.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n\nvar SymbolTag;\n\n(function (SymbolTag2) {\n  SymbolTag2.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\n\nvar SymbolInformation;\n\n(function (SymbolInformation2) {\n  function create(name, kind, range, uri, containerName) {\n    var result = {\n      name,\n      kind,\n      location: {\n        uri,\n        range\n      }\n    };\n\n    if (containerName) {\n      result.containerName = containerName;\n    }\n\n    return result;\n  }\n\n  SymbolInformation2.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n\nvar DocumentSymbol;\n\n(function (DocumentSymbol2) {\n  function create(name, detail, kind, range, selectionRange, children) {\n    var result = {\n      name,\n      detail,\n      kind,\n      range,\n      selectionRange\n    };\n\n    if (children !== void 0) {\n      result.children = children;\n    }\n\n    return result;\n  }\n\n  DocumentSymbol2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate && Is.string(candidate.name) && Is.number(candidate.kind) && Range.is(candidate.range) && Range.is(candidate.selectionRange) && (candidate.detail === void 0 || Is.string(candidate.detail)) && (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) && (candidate.children === void 0 || Array.isArray(candidate.children)) && (candidate.tags === void 0 || Array.isArray(candidate.tags));\n  }\n\n  DocumentSymbol2.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n\nvar CodeActionKind;\n\n(function (CodeActionKind2) {\n  CodeActionKind2.Empty = \"\";\n  CodeActionKind2.QuickFix = \"quickfix\";\n  CodeActionKind2.Refactor = \"refactor\";\n  CodeActionKind2.RefactorExtract = \"refactor.extract\";\n  CodeActionKind2.RefactorInline = \"refactor.inline\";\n  CodeActionKind2.RefactorRewrite = \"refactor.rewrite\";\n  CodeActionKind2.Source = \"source\";\n  CodeActionKind2.SourceOrganizeImports = \"source.organizeImports\";\n  CodeActionKind2.SourceFixAll = \"source.fixAll\";\n})(CodeActionKind || (CodeActionKind = {}));\n\nvar CodeActionContext;\n\n(function (CodeActionContext2) {\n  function create(diagnostics, only) {\n    var result = {\n      diagnostics\n    };\n\n    if (only !== void 0 && only !== null) {\n      result.only = only;\n    }\n\n    return result;\n  }\n\n  CodeActionContext2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\n  }\n\n  CodeActionContext2.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n\nvar CodeAction;\n\n(function (CodeAction2) {\n  function create(title, kindOrCommandOrEdit, kind) {\n    var result = {\n      title\n    };\n    var checkKind = true;\n\n    if (typeof kindOrCommandOrEdit === \"string\") {\n      checkKind = false;\n      result.kind = kindOrCommandOrEdit;\n    } else if (Command.is(kindOrCommandOrEdit)) {\n      result.command = kindOrCommandOrEdit;\n    } else {\n      result.edit = kindOrCommandOrEdit;\n    }\n\n    if (checkKind && kind !== void 0) {\n      result.kind = kind;\n    }\n\n    return result;\n  }\n\n  CodeAction2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate && Is.string(candidate.title) && (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) && (candidate.kind === void 0 || Is.string(candidate.kind)) && (candidate.edit !== void 0 || candidate.command !== void 0) && (candidate.command === void 0 || Command.is(candidate.command)) && (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) && (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\n  }\n\n  CodeAction2.is = is;\n})(CodeAction || (CodeAction = {}));\n\nvar CodeLens;\n\n(function (CodeLens2) {\n  function create(range, data) {\n    var result = {\n      range\n    };\n\n    if (Is.defined(data)) {\n      result.data = data;\n    }\n\n    return result;\n  }\n\n  CodeLens2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n  }\n\n  CodeLens2.is = is;\n})(CodeLens || (CodeLens = {}));\n\nvar FormattingOptions;\n\n(function (FormattingOptions2) {\n  function create(tabSize, insertSpaces) {\n    return {\n      tabSize,\n      insertSpaces\n    };\n  }\n\n  FormattingOptions2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n  }\n\n  FormattingOptions2.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n\nvar DocumentLink;\n\n(function (DocumentLink2) {\n  function create(range, target, data) {\n    return {\n      range,\n      target,\n      data\n    };\n  }\n\n  DocumentLink2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n  }\n\n  DocumentLink2.is = is;\n})(DocumentLink || (DocumentLink = {}));\n\nvar SelectionRange;\n\n(function (SelectionRange2) {\n  function create(range, parent) {\n    return {\n      range,\n      parent\n    };\n  }\n\n  SelectionRange2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate !== void 0 && Range.is(candidate.range) && (candidate.parent === void 0 || SelectionRange2.is(candidate.parent));\n  }\n\n  SelectionRange2.is = is;\n})(SelectionRange || (SelectionRange = {}));\n\nvar TextDocument;\n\n(function (TextDocument2) {\n  function create(uri, languageId, version, content) {\n    return new FullTextDocument(uri, languageId, version, content);\n  }\n\n  TextDocument2.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount) && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n  }\n\n  TextDocument2.is = is;\n\n  function applyEdits(document, edits) {\n    var text = document.getText();\n    var sortedEdits = mergeSort(edits, function (a, b) {\n      var diff = a.range.start.line - b.range.start.line;\n\n      if (diff === 0) {\n        return a.range.start.character - b.range.start.character;\n      }\n\n      return diff;\n    });\n    var lastModifiedOffset = text.length;\n\n    for (var i = sortedEdits.length - 1; i >= 0; i--) {\n      var e = sortedEdits[i];\n      var startOffset = document.offsetAt(e.range.start);\n      var endOffset = document.offsetAt(e.range.end);\n\n      if (endOffset <= lastModifiedOffset) {\n        text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n      } else {\n        throw new Error(\"Overlapping edit\");\n      }\n\n      lastModifiedOffset = startOffset;\n    }\n\n    return text;\n  }\n\n  TextDocument2.applyEdits = applyEdits;\n\n  function mergeSort(data, compare) {\n    if (data.length <= 1) {\n      return data;\n    }\n\n    var p = data.length / 2 | 0;\n    var left = data.slice(0, p);\n    var right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    var leftIdx = 0;\n    var rightIdx = 0;\n    var i = 0;\n\n    while (leftIdx < left.length && rightIdx < right.length) {\n      var ret = compare(left[leftIdx], right[rightIdx]);\n\n      if (ret <= 0) {\n        data[i++] = left[leftIdx++];\n      } else {\n        data[i++] = right[rightIdx++];\n      }\n    }\n\n    while (leftIdx < left.length) {\n      data[i++] = left[leftIdx++];\n    }\n\n    while (rightIdx < right.length) {\n      data[i++] = right[rightIdx++];\n    }\n\n    return data;\n  }\n})(TextDocument || (TextDocument = {}));\n\nvar FullTextDocument = function () {\n  function FullTextDocument2(uri, languageId, version, content) {\n    this._uri = uri;\n    this._languageId = languageId;\n    this._version = version;\n    this._content = content;\n    this._lineOffsets = void 0;\n  }\n\n  Object.defineProperty(FullTextDocument2.prototype, \"uri\", {\n    get: function () {\n      return this._uri;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FullTextDocument2.prototype, \"languageId\", {\n    get: function () {\n      return this._languageId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FullTextDocument2.prototype, \"version\", {\n    get: function () {\n      return this._version;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  FullTextDocument2.prototype.getText = function (range) {\n    if (range) {\n      var start = this.offsetAt(range.start);\n      var end = this.offsetAt(range.end);\n      return this._content.substring(start, end);\n    }\n\n    return this._content;\n  };\n\n  FullTextDocument2.prototype.update = function (event, version) {\n    this._content = event.text;\n    this._version = version;\n    this._lineOffsets = void 0;\n  };\n\n  FullTextDocument2.prototype.getLineOffsets = function () {\n    if (this._lineOffsets === void 0) {\n      var lineOffsets = [];\n      var text = this._content;\n      var isLineStart = true;\n\n      for (var i = 0; i < text.length; i++) {\n        if (isLineStart) {\n          lineOffsets.push(i);\n          isLineStart = false;\n        }\n\n        var ch = text.charAt(i);\n        isLineStart = ch === \"\\r\" || ch === \"\\n\";\n\n        if (ch === \"\\r\" && i + 1 < text.length && text.charAt(i + 1) === \"\\n\") {\n          i++;\n        }\n      }\n\n      if (isLineStart && text.length > 0) {\n        lineOffsets.push(text.length);\n      }\n\n      this._lineOffsets = lineOffsets;\n    }\n\n    return this._lineOffsets;\n  };\n\n  FullTextDocument2.prototype.positionAt = function (offset) {\n    offset = Math.max(Math.min(offset, this._content.length), 0);\n    var lineOffsets = this.getLineOffsets();\n    var low = 0,\n        high = lineOffsets.length;\n\n    if (high === 0) {\n      return Position.create(0, offset);\n    }\n\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n\n      if (lineOffsets[mid] > offset) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    }\n\n    var line = low - 1;\n    return Position.create(line, offset - lineOffsets[line]);\n  };\n\n  FullTextDocument2.prototype.offsetAt = function (position) {\n    var lineOffsets = this.getLineOffsets();\n\n    if (position.line >= lineOffsets.length) {\n      return this._content.length;\n    } else if (position.line < 0) {\n      return 0;\n    }\n\n    var lineOffset = lineOffsets[position.line];\n    var nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n  };\n\n  Object.defineProperty(FullTextDocument2.prototype, \"lineCount\", {\n    get: function () {\n      return this.getLineOffsets().length;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return FullTextDocument2;\n}();\n\nvar Is;\n\n(function (Is2) {\n  var toString = Object.prototype.toString;\n\n  function defined(value) {\n    return typeof value !== \"undefined\";\n  }\n\n  Is2.defined = defined;\n\n  function undefined2(value) {\n    return typeof value === \"undefined\";\n  }\n\n  Is2.undefined = undefined2;\n\n  function boolean(value) {\n    return value === true || value === false;\n  }\n\n  Is2.boolean = boolean;\n\n  function string(value) {\n    return toString.call(value) === \"[object String]\";\n  }\n\n  Is2.string = string;\n\n  function number(value) {\n    return toString.call(value) === \"[object Number]\";\n  }\n\n  Is2.number = number;\n\n  function numberRange(value, min, max) {\n    return toString.call(value) === \"[object Number]\" && min <= value && value <= max;\n  }\n\n  Is2.numberRange = numberRange;\n\n  function integer2(value) {\n    return toString.call(value) === \"[object Number]\" && -2147483648 <= value && value <= 2147483647;\n  }\n\n  Is2.integer = integer2;\n\n  function uinteger2(value) {\n    return toString.call(value) === \"[object Number]\" && 0 <= value && value <= 2147483647;\n  }\n\n  Is2.uinteger = uinteger2;\n\n  function func(value) {\n    return toString.call(value) === \"[object Function]\";\n  }\n\n  Is2.func = func;\n\n  function objectLiteral(value) {\n    return value !== null && typeof value === \"object\";\n  }\n\n  Is2.objectLiteral = objectLiteral;\n\n  function typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n  }\n\n  Is2.typedArray = typedArray;\n})(Is || (Is = {})); // src/language/common/lspLanguageFeatures.ts\n\n\nvar DiagnosticsAdapter = class DiagnosticsAdapter {\n  constructor(_languageId, _worker, configChangeEvent) {\n    (0,D_Code_vue_onlie_editor_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_disposables\", []);\n\n    (0,D_Code_vue_onlie_editor_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_listener\", /* @__PURE__ */Object.create(null));\n\n    this._languageId = _languageId;\n    this._worker = _worker;\n\n    const onModelAdd = model => {\n      let modeId = model.getLanguageId();\n\n      if (modeId !== this._languageId) {\n        return;\n      }\n\n      let handle;\n      this._listener[model.uri.toString()] = model.onDidChangeContent(() => {\n        window.clearTimeout(handle);\n        handle = window.setTimeout(() => this._doValidate(model.uri, modeId), 500);\n      });\n\n      this._doValidate(model.uri, modeId);\n    };\n\n    const onModelRemoved = model => {\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._languageId, []);\n      let uriStr = model.uri.toString();\n      let listener = this._listener[uriStr];\n\n      if (listener) {\n        listener.dispose();\n        delete this._listener[uriStr];\n      }\n    };\n\n    this._disposables.push(monaco_editor_core_exports.editor.onDidCreateModel(onModelAdd));\n\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n\n    this._disposables.push(monaco_editor_core_exports.editor.onDidChangeModelLanguage(event => {\n      onModelRemoved(event.model);\n      onModelAdd(event.model);\n    }));\n\n    this._disposables.push(configChangeEvent(_ => {\n      monaco_editor_core_exports.editor.getModels().forEach(model => {\n        if (model.getLanguageId() === this._languageId) {\n          onModelRemoved(model);\n          onModelAdd(model);\n        }\n      });\n    }));\n\n    this._disposables.push({\n      dispose: () => {\n        monaco_editor_core_exports.editor.getModels().forEach(onModelRemoved);\n\n        for (let key in this._listener) {\n          this._listener[key].dispose();\n        }\n      }\n    });\n\n    monaco_editor_core_exports.editor.getModels().forEach(onModelAdd);\n  }\n\n  dispose() {\n    this._disposables.forEach(d => d && d.dispose());\n\n    this._disposables.length = 0;\n  }\n\n  _doValidate(resource, languageId) {\n    this._worker(resource).then(worker => {\n      return worker.doValidation(resource.toString());\n    }).then(diagnostics => {\n      const markers = diagnostics.map(d => toDiagnostics(resource, d));\n      let model = monaco_editor_core_exports.editor.getModel(resource);\n\n      if (model && model.getLanguageId() === languageId) {\n        monaco_editor_core_exports.editor.setModelMarkers(model, languageId, markers);\n      }\n    }).then(void 0, err => {\n      console.error(err);\n    });\n  }\n\n};\n\nfunction toSeverity(lsSeverity) {\n  switch (lsSeverity) {\n    case DiagnosticSeverity.Error:\n      return monaco_editor_core_exports.MarkerSeverity.Error;\n\n    case DiagnosticSeverity.Warning:\n      return monaco_editor_core_exports.MarkerSeverity.Warning;\n\n    case DiagnosticSeverity.Information:\n      return monaco_editor_core_exports.MarkerSeverity.Info;\n\n    case DiagnosticSeverity.Hint:\n      return monaco_editor_core_exports.MarkerSeverity.Hint;\n\n    default:\n      return monaco_editor_core_exports.MarkerSeverity.Info;\n  }\n}\n\nfunction toDiagnostics(resource, diag) {\n  let code = typeof diag.code === \"number\" ? String(diag.code) : diag.code;\n  return {\n    severity: toSeverity(diag.severity),\n    startLineNumber: diag.range.start.line + 1,\n    startColumn: diag.range.start.character + 1,\n    endLineNumber: diag.range.end.line + 1,\n    endColumn: diag.range.end.character + 1,\n    message: diag.message,\n    code,\n    source: diag.source\n  };\n}\n\nvar CompletionAdapter = class {\n  constructor(_worker, _triggerCharacters) {\n    this._worker = _worker;\n    this._triggerCharacters = _triggerCharacters;\n  }\n\n  get triggerCharacters() {\n    return this._triggerCharacters;\n  }\n\n  provideCompletionItems(model, position, context, token) {\n    const resource = model.uri;\n    return this._worker(resource).then(worker => {\n      return worker.doComplete(resource.toString(), fromPosition(position));\n    }).then(info => {\n      if (!info) {\n        return;\n      }\n\n      const wordInfo = model.getWordUntilPosition(position);\n      const wordRange = new monaco_editor_core_exports.Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n      const items = info.items.map(entry => {\n        const item = {\n          label: entry.label,\n          insertText: entry.insertText || entry.label,\n          sortText: entry.sortText,\n          filterText: entry.filterText,\n          documentation: entry.documentation,\n          detail: entry.detail,\n          command: toCommand(entry.command),\n          range: wordRange,\n          kind: toCompletionItemKind(entry.kind)\n        };\n\n        if (entry.textEdit) {\n          if (isInsertReplaceEdit(entry.textEdit)) {\n            item.range = {\n              insert: toRange(entry.textEdit.insert),\n              replace: toRange(entry.textEdit.replace)\n            };\n          } else {\n            item.range = toRange(entry.textEdit.range);\n          }\n\n          item.insertText = entry.textEdit.newText;\n        }\n\n        if (entry.additionalTextEdits) {\n          item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n        }\n\n        if (entry.insertTextFormat === InsertTextFormat.Snippet) {\n          item.insertTextRules = monaco_editor_core_exports.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n        }\n\n        return item;\n      });\n      return {\n        isIncomplete: info.isIncomplete,\n        suggestions: items\n      };\n    });\n  }\n\n};\n\nfunction fromPosition(position) {\n  if (!position) {\n    return void 0;\n  }\n\n  return {\n    character: position.column - 1,\n    line: position.lineNumber - 1\n  };\n}\n\nfunction fromRange(range) {\n  if (!range) {\n    return void 0;\n  }\n\n  return {\n    start: {\n      line: range.startLineNumber - 1,\n      character: range.startColumn - 1\n    },\n    end: {\n      line: range.endLineNumber - 1,\n      character: range.endColumn - 1\n    }\n  };\n}\n\nfunction toRange(range) {\n  if (!range) {\n    return void 0;\n  }\n\n  return new monaco_editor_core_exports.Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\n\nfunction isInsertReplaceEdit(edit) {\n  return typeof edit.insert !== \"undefined\" && typeof edit.replace !== \"undefined\";\n}\n\nfunction toCompletionItemKind(kind) {\n  const mItemKind = monaco_editor_core_exports.languages.CompletionItemKind;\n\n  switch (kind) {\n    case CompletionItemKind.Text:\n      return mItemKind.Text;\n\n    case CompletionItemKind.Method:\n      return mItemKind.Method;\n\n    case CompletionItemKind.Function:\n      return mItemKind.Function;\n\n    case CompletionItemKind.Constructor:\n      return mItemKind.Constructor;\n\n    case CompletionItemKind.Field:\n      return mItemKind.Field;\n\n    case CompletionItemKind.Variable:\n      return mItemKind.Variable;\n\n    case CompletionItemKind.Class:\n      return mItemKind.Class;\n\n    case CompletionItemKind.Interface:\n      return mItemKind.Interface;\n\n    case CompletionItemKind.Module:\n      return mItemKind.Module;\n\n    case CompletionItemKind.Property:\n      return mItemKind.Property;\n\n    case CompletionItemKind.Unit:\n      return mItemKind.Unit;\n\n    case CompletionItemKind.Value:\n      return mItemKind.Value;\n\n    case CompletionItemKind.Enum:\n      return mItemKind.Enum;\n\n    case CompletionItemKind.Keyword:\n      return mItemKind.Keyword;\n\n    case CompletionItemKind.Snippet:\n      return mItemKind.Snippet;\n\n    case CompletionItemKind.Color:\n      return mItemKind.Color;\n\n    case CompletionItemKind.File:\n      return mItemKind.File;\n\n    case CompletionItemKind.Reference:\n      return mItemKind.Reference;\n  }\n\n  return mItemKind.Property;\n}\n\nfunction toTextEdit(textEdit) {\n  if (!textEdit) {\n    return void 0;\n  }\n\n  return {\n    range: toRange(textEdit.range),\n    text: textEdit.newText\n  };\n}\n\nfunction toCommand(c) {\n  return c && c.command === \"editor.action.triggerSuggest\" ? {\n    id: c.command,\n    title: c.title,\n    arguments: c.arguments\n  } : void 0;\n}\n\nvar HoverAdapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n\n  provideHover(model, position, token) {\n    let resource = model.uri;\n    return this._worker(resource).then(worker => {\n      return worker.doHover(resource.toString(), fromPosition(position));\n    }).then(info => {\n      if (!info) {\n        return;\n      }\n\n      return {\n        range: toRange(info.range),\n        contents: toMarkedStringArray(info.contents)\n      };\n    });\n  }\n\n};\n\nfunction isMarkupContent(thing) {\n  return thing && typeof thing === \"object\" && typeof thing.kind === \"string\";\n}\n\nfunction toMarkdownString(entry) {\n  if (typeof entry === \"string\") {\n    return {\n      value: entry\n    };\n  }\n\n  if (isMarkupContent(entry)) {\n    if (entry.kind === \"plaintext\") {\n      return {\n        value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\")\n      };\n    }\n\n    return {\n      value: entry.value\n    };\n  }\n\n  return {\n    value: \"```\" + entry.language + \"\\n\" + entry.value + \"\\n```\\n\"\n  };\n}\n\nfunction toMarkedStringArray(contents) {\n  if (!contents) {\n    return void 0;\n  }\n\n  if (Array.isArray(contents)) {\n    return contents.map(toMarkdownString);\n  }\n\n  return [toMarkdownString(contents)];\n}\n\nvar DocumentHighlightAdapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n\n  provideDocumentHighlights(model, position, token) {\n    const resource = model.uri;\n    return this._worker(resource).then(worker => worker.findDocumentHighlights(resource.toString(), fromPosition(position))).then(entries => {\n      if (!entries) {\n        return;\n      }\n\n      return entries.map(entry => {\n        return {\n          range: toRange(entry.range),\n          kind: toDocumentHighlightKind(entry.kind)\n        };\n      });\n    });\n  }\n\n};\n\nfunction toDocumentHighlightKind(kind) {\n  switch (kind) {\n    case DocumentHighlightKind.Read:\n      return monaco_editor_core_exports.languages.DocumentHighlightKind.Read;\n\n    case DocumentHighlightKind.Write:\n      return monaco_editor_core_exports.languages.DocumentHighlightKind.Write;\n\n    case DocumentHighlightKind.Text:\n      return monaco_editor_core_exports.languages.DocumentHighlightKind.Text;\n  }\n\n  return monaco_editor_core_exports.languages.DocumentHighlightKind.Text;\n}\n\nvar DefinitionAdapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n\n  provideDefinition(model, position, token) {\n    const resource = model.uri;\n    return this._worker(resource).then(worker => {\n      return worker.findDefinition(resource.toString(), fromPosition(position));\n    }).then(definition => {\n      if (!definition) {\n        return;\n      }\n\n      return [toLocation(definition)];\n    });\n  }\n\n};\n\nfunction toLocation(location) {\n  return {\n    uri: monaco_editor_core_exports.Uri.parse(location.uri),\n    range: toRange(location.range)\n  };\n}\n\nvar ReferenceAdapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n\n  provideReferences(model, position, context, token) {\n    const resource = model.uri;\n    return this._worker(resource).then(worker => {\n      return worker.findReferences(resource.toString(), fromPosition(position));\n    }).then(entries => {\n      if (!entries) {\n        return;\n      }\n\n      return entries.map(toLocation);\n    });\n  }\n\n};\nvar RenameAdapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n\n  provideRenameEdits(model, position, newName, token) {\n    const resource = model.uri;\n    return this._worker(resource).then(worker => {\n      return worker.doRename(resource.toString(), fromPosition(position), newName);\n    }).then(edit => {\n      return toWorkspaceEdit(edit);\n    });\n  }\n\n};\n\nfunction toWorkspaceEdit(edit) {\n  if (!edit || !edit.changes) {\n    return void 0;\n  }\n\n  let resourceEdits = [];\n\n  for (let uri in edit.changes) {\n    const _uri = monaco_editor_core_exports.Uri.parse(uri);\n\n    for (let e of edit.changes[uri]) {\n      resourceEdits.push({\n        resource: _uri,\n        versionId: void 0,\n        textEdit: {\n          range: toRange(e.range),\n          text: e.newText\n        }\n      });\n    }\n  }\n\n  return {\n    edits: resourceEdits\n  };\n}\n\nvar DocumentSymbolAdapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n\n  provideDocumentSymbols(model, token) {\n    const resource = model.uri;\n    return this._worker(resource).then(worker => worker.findDocumentSymbols(resource.toString())).then(items => {\n      if (!items) {\n        return;\n      }\n\n      return items.map(item => ({\n        name: item.name,\n        detail: \"\",\n        containerName: item.containerName,\n        kind: toSymbolKind(item.kind),\n        range: toRange(item.location.range),\n        selectionRange: toRange(item.location.range),\n        tags: []\n      }));\n    });\n  }\n\n};\n\nfunction toSymbolKind(kind) {\n  let mKind = monaco_editor_core_exports.languages.SymbolKind;\n\n  switch (kind) {\n    case SymbolKind.File:\n      return mKind.Array;\n\n    case SymbolKind.Module:\n      return mKind.Module;\n\n    case SymbolKind.Namespace:\n      return mKind.Namespace;\n\n    case SymbolKind.Package:\n      return mKind.Package;\n\n    case SymbolKind.Class:\n      return mKind.Class;\n\n    case SymbolKind.Method:\n      return mKind.Method;\n\n    case SymbolKind.Property:\n      return mKind.Property;\n\n    case SymbolKind.Field:\n      return mKind.Field;\n\n    case SymbolKind.Constructor:\n      return mKind.Constructor;\n\n    case SymbolKind.Enum:\n      return mKind.Enum;\n\n    case SymbolKind.Interface:\n      return mKind.Interface;\n\n    case SymbolKind.Function:\n      return mKind.Function;\n\n    case SymbolKind.Variable:\n      return mKind.Variable;\n\n    case SymbolKind.Constant:\n      return mKind.Constant;\n\n    case SymbolKind.String:\n      return mKind.String;\n\n    case SymbolKind.Number:\n      return mKind.Number;\n\n    case SymbolKind.Boolean:\n      return mKind.Boolean;\n\n    case SymbolKind.Array:\n      return mKind.Array;\n  }\n\n  return mKind.Function;\n}\n\nvar DocumentLinkAdapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n\n  provideLinks(model, token) {\n    const resource = model.uri;\n    return this._worker(resource).then(worker => worker.findDocumentLinks(resource.toString())).then(items => {\n      if (!items) {\n        return;\n      }\n\n      return {\n        links: items.map(item => ({\n          range: toRange(item.range),\n          url: item.target\n        }))\n      };\n    });\n  }\n\n};\nvar DocumentFormattingEditProvider = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n\n  provideDocumentFormattingEdits(model, options, token) {\n    const resource = model.uri;\n    return this._worker(resource).then(worker => {\n      return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(edits => {\n        if (!edits || edits.length === 0) {\n          return;\n        }\n\n        return edits.map(toTextEdit);\n      });\n    });\n  }\n\n};\nvar DocumentRangeFormattingEditProvider = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n\n  provideDocumentRangeFormattingEdits(model, range, options, token) {\n    const resource = model.uri;\n    return this._worker(resource).then(worker => {\n      return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(edits => {\n        if (!edits || edits.length === 0) {\n          return;\n        }\n\n        return edits.map(toTextEdit);\n      });\n    });\n  }\n\n};\n\nfunction fromFormattingOptions(options) {\n  return {\n    tabSize: options.tabSize,\n    insertSpaces: options.insertSpaces\n  };\n}\n\nvar DocumentColorAdapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n\n  provideDocumentColors(model, token) {\n    const resource = model.uri;\n    return this._worker(resource).then(worker => worker.findDocumentColors(resource.toString())).then(infos => {\n      if (!infos) {\n        return;\n      }\n\n      return infos.map(item => ({\n        color: item.color,\n        range: toRange(item.range)\n      }));\n    });\n  }\n\n  provideColorPresentations(model, info, token) {\n    const resource = model.uri;\n    return this._worker(resource).then(worker => worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range))).then(presentations => {\n      if (!presentations) {\n        return;\n      }\n\n      return presentations.map(presentation => {\n        let item = {\n          label: presentation.label\n        };\n\n        if (presentation.textEdit) {\n          item.textEdit = toTextEdit(presentation.textEdit);\n        }\n\n        if (presentation.additionalTextEdits) {\n          item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n        }\n\n        return item;\n      });\n    });\n  }\n\n};\nvar FoldingRangeAdapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n\n  provideFoldingRanges(model, context, token) {\n    const resource = model.uri;\n    return this._worker(resource).then(worker => worker.getFoldingRanges(resource.toString(), context)).then(ranges => {\n      if (!ranges) {\n        return;\n      }\n\n      return ranges.map(range => {\n        const result = {\n          start: range.startLine + 1,\n          end: range.endLine + 1\n        };\n\n        if (typeof range.kind !== \"undefined\") {\n          result.kind = toFoldingRangeKind(range.kind);\n        }\n\n        return result;\n      });\n    });\n  }\n\n};\n\nfunction toFoldingRangeKind(kind) {\n  switch (kind) {\n    case FoldingRangeKind.Comment:\n      return monaco_editor_core_exports.languages.FoldingRangeKind.Comment;\n\n    case FoldingRangeKind.Imports:\n      return monaco_editor_core_exports.languages.FoldingRangeKind.Imports;\n\n    case FoldingRangeKind.Region:\n      return monaco_editor_core_exports.languages.FoldingRangeKind.Region;\n  }\n\n  return void 0;\n}\n\nvar SelectionRangeAdapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n\n  provideSelectionRanges(model, positions, token) {\n    const resource = model.uri;\n    return this._worker(resource).then(worker => worker.getSelectionRanges(resource.toString(), positions.map(fromPosition))).then(selectionRanges => {\n      if (!selectionRanges) {\n        return;\n      }\n\n      return selectionRanges.map(selectionRange => {\n        const result = [];\n\n        while (selectionRange) {\n          result.push({\n            range: toRange(selectionRange.range)\n          });\n          selectionRange = selectionRange.parent;\n        }\n\n        return result;\n      });\n    });\n  }\n\n}; // src/language/html/htmlMode.ts\n\nvar HTMLCompletionAdapter = class extends CompletionAdapter {\n  constructor(worker) {\n    super(worker, [\".\", \":\", \"<\", '\"', \"=\", \"/\"]);\n  }\n\n};\n\nfunction setupMode1(defaults) {\n  const client = new WorkerManager(defaults);\n\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n\n  let languageId = defaults.languageId;\n  monaco_editor_core_exports.languages.registerCompletionItemProvider(languageId, new HTMLCompletionAdapter(worker));\n  monaco_editor_core_exports.languages.registerHoverProvider(languageId, new HoverAdapter(worker));\n  monaco_editor_core_exports.languages.registerDocumentHighlightProvider(languageId, new DocumentHighlightAdapter(worker));\n  monaco_editor_core_exports.languages.registerLinkProvider(languageId, new DocumentLinkAdapter(worker));\n  monaco_editor_core_exports.languages.registerFoldingRangeProvider(languageId, new FoldingRangeAdapter(worker));\n  monaco_editor_core_exports.languages.registerDocumentSymbolProvider(languageId, new DocumentSymbolAdapter(worker));\n  monaco_editor_core_exports.languages.registerSelectionRangeProvider(languageId, new SelectionRangeAdapter(worker));\n  monaco_editor_core_exports.languages.registerRenameProvider(languageId, new RenameAdapter(worker));\n\n  if (languageId === \"html\") {\n    monaco_editor_core_exports.languages.registerDocumentFormattingEditProvider(languageId, new DocumentFormattingEditProvider(worker));\n    monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(languageId, new DocumentRangeFormattingEditProvider(worker));\n  }\n}\n\nfunction setupMode(defaults) {\n  const disposables = [];\n  const providers = [];\n  const client = new WorkerManager(defaults);\n  disposables.push(client);\n\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n\n  function registerProviders() {\n    const {\n      languageId,\n      modeConfiguration\n    } = defaults;\n    disposeAll(providers);\n\n    if (modeConfiguration.completionItems) {\n      providers.push(monaco_editor_core_exports.languages.registerCompletionItemProvider(languageId, new HTMLCompletionAdapter(worker)));\n    }\n\n    if (modeConfiguration.hovers) {\n      providers.push(monaco_editor_core_exports.languages.registerHoverProvider(languageId, new HoverAdapter(worker)));\n    }\n\n    if (modeConfiguration.documentHighlights) {\n      providers.push(monaco_editor_core_exports.languages.registerDocumentHighlightProvider(languageId, new DocumentHighlightAdapter(worker)));\n    }\n\n    if (modeConfiguration.links) {\n      providers.push(monaco_editor_core_exports.languages.registerLinkProvider(languageId, new DocumentLinkAdapter(worker)));\n    }\n\n    if (modeConfiguration.documentSymbols) {\n      providers.push(monaco_editor_core_exports.languages.registerDocumentSymbolProvider(languageId, new DocumentSymbolAdapter(worker)));\n    }\n\n    if (modeConfiguration.rename) {\n      providers.push(monaco_editor_core_exports.languages.registerRenameProvider(languageId, new RenameAdapter(worker)));\n    }\n\n    if (modeConfiguration.foldingRanges) {\n      providers.push(monaco_editor_core_exports.languages.registerFoldingRangeProvider(languageId, new FoldingRangeAdapter(worker)));\n    }\n\n    if (modeConfiguration.selectionRanges) {\n      providers.push(monaco_editor_core_exports.languages.registerSelectionRangeProvider(languageId, new SelectionRangeAdapter(worker)));\n    }\n\n    if (modeConfiguration.documentFormattingEdits) {\n      providers.push(monaco_editor_core_exports.languages.registerDocumentFormattingEditProvider(languageId, new DocumentFormattingEditProvider(worker)));\n    }\n\n    if (modeConfiguration.documentRangeFormattingEdits) {\n      providers.push(monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(languageId, new DocumentRangeFormattingEditProvider(worker)));\n    }\n  }\n\n  registerProviders();\n  disposables.push(asDisposable(providers));\n  return asDisposable(disposables);\n}\n\nfunction asDisposable(disposables) {\n  return {\n    dispose: () => disposeAll(disposables)\n  };\n}\n\nfunction disposeAll(disposables) {\n  while (disposables.length) {\n    disposables.pop().dispose();\n  }\n}\n\n\n\n//# sourceURL=webpack://online-conplier/./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js?");

/***/ })

}]);