"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkonline_conplier"] = self["webpackChunkonline_conplier"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_html_html_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/html/html.js":
/*!************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/html/html.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": function() { return /* binding */ conf; },\n/* harmony export */   \"language\": function() { return /* binding */ language; }\n/* harmony export */ });\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../editor/editor.api.js */ \"./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.0(9d278685b078158491964f8fd7ac9628fffa0f30)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n\n  return to;\n};\n\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\")); // src/fillers/monaco-editor-core.ts\n\n\nvar monaco_editor_core_exports = {};\n\n__reExport(monaco_editor_core_exports, _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\n\n // src/basic-languages/html/html.ts\n\nvar EMPTY_ELEMENTS = [\"area\", \"base\", \"br\", \"col\", \"embed\", \"hr\", \"img\", \"input\", \"keygen\", \"link\", \"menuitem\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"];\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"<!--\", \"-->\"], [\"<\", \">\"], [\"{\", \"}\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }],\n  onEnterRules: [{\n    beforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n    afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n    }\n  }, {\n    beforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\n    }\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*<!--\\\\s*#region\\\\b.*-->\"),\n      end: new RegExp(\"^\\\\s*<!--\\\\s*#endregion\\\\b.*-->\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".html\",\n  ignoreCase: true,\n  tokenizer: {\n    root: [[/<!DOCTYPE/, \"metatag\", \"@doctype\"], [/<!--/, \"comment\", \"@comment\"], [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, [\"delimiter\", \"tag\", \"\", \"delimiter\"]], [/(<)(script)/, [\"delimiter\", {\n      token: \"tag\",\n      next: \"@script\"\n    }]], [/(<)(style)/, [\"delimiter\", {\n      token: \"tag\",\n      next: \"@style\"\n    }]], [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter\", {\n      token: \"tag\",\n      next: \"@otherTag\"\n    }]], [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter\", {\n      token: \"tag\",\n      next: \"@otherTag\"\n    }]], [/</, \"delimiter\"], [/[^<]+/]],\n    doctype: [[/[^>]+/, \"metatag.content\"], [/>/, \"metatag\", \"@pop\"]],\n    comment: [[/-->/, \"comment\", \"@pop\"], [/[^-]+/, \"comment.content\"], [/./, \"comment.content\"]],\n    otherTag: [[/\\/?>/, \"delimiter\", \"@pop\"], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/[ \\t\\r\\n]+/]],\n    script: [[/type/, \"attribute.name\", \"@scriptAfterType\"], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/>/, {\n      token: \"delimiter\",\n      next: \"@scriptEmbedded\",\n      nextEmbedded: \"text/javascript\"\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(script\\s*)(>)/, [\"delimiter\", \"tag\", {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }]]],\n    scriptAfterType: [[/=/, \"delimiter\", \"@scriptAfterTypeEquals\"], [/>/, {\n      token: \"delimiter\",\n      next: \"@scriptEmbedded\",\n      nextEmbedded: \"text/javascript\"\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    scriptAfterTypeEquals: [[/\"module\"/, {\n      token: \"attribute.value\",\n      switchTo: \"@scriptWithCustomType.text/javascript\"\n    }], [/'module'/, {\n      token: \"attribute.value\",\n      switchTo: \"@scriptWithCustomType.text/javascript\"\n    }], [/\"([^\"]*)\"/, {\n      token: \"attribute.value\",\n      switchTo: \"@scriptWithCustomType.$1\"\n    }], [/'([^']*)'/, {\n      token: \"attribute.value\",\n      switchTo: \"@scriptWithCustomType.$1\"\n    }], [/>/, {\n      token: \"delimiter\",\n      next: \"@scriptEmbedded\",\n      nextEmbedded: \"text/javascript\"\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    scriptWithCustomType: [[/>/, {\n      token: \"delimiter\",\n      next: \"@scriptEmbedded.$S2\",\n      nextEmbedded: \"$S2\"\n    }], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    scriptEmbedded: [[/<\\/script/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/[^<]+/, \"\"]],\n    style: [[/type/, \"attribute.name\", \"@styleAfterType\"], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/>/, {\n      token: \"delimiter\",\n      next: \"@styleEmbedded\",\n      nextEmbedded: \"text/css\"\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(style\\s*)(>)/, [\"delimiter\", \"tag\", {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }]]],\n    styleAfterType: [[/=/, \"delimiter\", \"@styleAfterTypeEquals\"], [/>/, {\n      token: \"delimiter\",\n      next: \"@styleEmbedded\",\n      nextEmbedded: \"text/css\"\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    styleAfterTypeEquals: [[/\"([^\"]*)\"/, {\n      token: \"attribute.value\",\n      switchTo: \"@styleWithCustomType.$1\"\n    }], [/'([^']*)'/, {\n      token: \"attribute.value\",\n      switchTo: \"@styleWithCustomType.$1\"\n    }], [/>/, {\n      token: \"delimiter\",\n      next: \"@styleEmbedded\",\n      nextEmbedded: \"text/css\"\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    styleWithCustomType: [[/>/, {\n      token: \"delimiter\",\n      next: \"@styleEmbedded.$S2\",\n      nextEmbedded: \"$S2\"\n    }], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    styleEmbedded: [[/<\\/style/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/[^<]+/, \"\"]]\n  }\n};\n\n\n//# sourceURL=webpack://online-conplier/./node_modules/monaco-editor/esm/vs/basic-languages/html/html.js?");

/***/ })

}]);